$colorGreyDark: rgb(182, 185, 187);
$monitoringBorder: 2px solid $colorGreyDark;

.monitoring {
    display: flex;
    position: relative;
    flex-direction: column;

    // A component node
    .node {
        flex: 0 0 auto;
        display: flex;
        flex-direction: column;

        // Contains icon, arrows, connected state
        .visualization {
            display: flex;
            align-items: center;
            flex-direction: column;
            width: 145px;

            & > .icon {
                height: 90px;
                background-color: rgb(218, 220, 221);
                border: $monitoringBorder;
                border-radius: 5px;      
            }

            & > .icon svg {
                fill: rgb(146, 155, 162);
            }
        }

        .title {
            text-transform: uppercase;
        }
    }

    .node.system {
        margin-bottom: 60px;
    }

    // The selected node
    .active-node {
        .node {
            flex-direction: row;
        }
        .visualization {
            margin-right: 30px;
        }
        .title {
            color: $colorQinousBlue;
        }
        ol.stats li {
            padding: 2px 0;
        }
    }

    // The subcomponents of the selected node
    .child-nodes {
        display: flex;
        margin-bottom: 20px;
        
        .node {
            width: 200px;
            color: $colorGreyDark;
            margin-right: 65px;
            cursor: pointer;

            &:last-child {
                margin-right: 0;
            }

            .title {
                margin-top: 8px;
                margin-bottom: 1px;
            }

            ol.stats {
                li {
                    padding: 4px 0;
                    border-bottom: 1px solid $colorGreyDark;
                }
            }
        }
    }

    // Graphics showing connections between components
    .connector {
        position: relative;
        height: 88px;

        &.bottom {
            height: 40px;
        }
    }

    .child-nodes .connector.top::after {
        position: absolute;
        content: "";
        width: 8px;
        height: 8px;
        left: -3px;
        top: -3px;
        border-radius: 50%;
        background-color: $colorGreyDark;

    }

    .horizontal-line {
        position: absolute;
        left: 0;
        width: 265px;
        height: 0;
        border-top: $monitoringBorder;
    }

    .vertical-line {
        position: absolute;
        left: 0;
        width: 0;
        height: 100%;
        border-right: $monitoringBorder;
    }

    .node:last-child .horizontal-line {
        display: none;
    }

    // Arrows displaying power flow
    .arrows {
        position: absolute;
        width: 40px;
        height: 55px;
        background-color: white;
        left: -20px;
        top: 16px;

        &.down {
            transform: rotate(180deg);
            top: 21px; // TODO maybe align at bottom
        }

        .arrow {
            margin-top: -8px;

            &:first-child {
                margin-top: 2px;
            }         
        }

        .icon {
            width: 100%;
            height: 25px;
            background-color: unset;
            border: 0;
            border-radius: 0;      
        }

        .icon svg {
            fill: rgb(209, 215, 216);
        }

        .active svg {
            fill: rgb(154, 197, 47),
        }
    }

    // Graphics describing disconnected component
    .disconnected {
        position: absolute;
        background-color: white;
        top: 24px;
        left: -7px;
        width: 17px;
        height: 46px;
        
        // Component is disconnected
        &.switch::after {
            content: "";
            position: absolute;
            width: 0;
            height: 100%;
            bottom: 0;
            left: 7px;
            transform-origin: 50% 100%;
            transform: rotate(30deg);  
            border-right: $monitoringBorder;      
        }

        &.loading::after,
        &.error::after {
            color: $colorGreyDark;
            width: 100%;
            text-align: center;
            display: inline-block;
            position: absolute;            
        }

        // Connection is still being determined
        &.loading::after {
            content: "â€¦";
            top: 12px;
        }

        // Connection is unknown because of error
        &.error::after {
            content: "?";
            top: 15px;
        }

        // When the component is disconnected we may still want to 
        // show (assumed) power flow for debugging purposes.  Show minified arrows defined above.
        .arrows {
            width: 22px;
            height: 30px;
            left: 38px;
            top: 32px;
            
            .arrow {
                margin-top: -15px;
            }
        }
    }
}
