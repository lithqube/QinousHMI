<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg width="60" version="1.2" xmlns="http://www.w3.org/2000/svg" height="30" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:atv="http://webmi.atvise.com/2007/svgext">
 <defs>
  <linearGradient id="linear_12" y1="-0.0183441" x1="1" y2="1" gradientUnits="objectBoundingBox" x2="1">
   <stop offset="0" stop-color="#494949"/>
   <stop offset="1" stop-color="#000000"/>
  </linearGradient>
  <linearGradient id="linear_0" y1="0.985206" x1="0.103182" y2="0.0446774" gradientUnits="objectBoundingBox" x2="0.103182">
   <stop offset="0" stop-color="#494949"/>
   <stop offset="1" stop-color="#000000"/>
  </linearGradient>
  <linearGradient id="linear_1" y1="-0.0183441" x1="1" y2="1" gradientUnits="objectBoundingBox" x2="1">
   <stop offset="0" stop-color="#ffffff" stop-opacity="0.2745098039215687"/>
   <stop offset="0.5515695067264574" stop-color="#ffffff" stop-opacity="0"/>
  </linearGradient>
  <linearGradient id="linear_5" y1="1.01601" x1="0.236193" y2="-0.0183441" gradientUnits="objectBoundingBox" x2="0.236193">
   <stop offset="0" stop-color="#ffffff" stop-opacity="0.2745098039215687"/>
   <stop offset="0.5515695067264574" stop-color="#ffffff" stop-opacity="0"/>
  </linearGradient>
 </defs>
 <desc>Opens the login dialog on click.</desc>
 <title>Button Login</title>
 <rect width="60" x="0" y="0" fill="#647A8F" rx="10" ry="5" height="30" stroke="none" stroke-linejoin="round" id="id_1" stroke-linecap="round" atv:refpx="30" stroke-width="0.5" atv:refpy="15"/>
 <metadata>
  <atv:parameter desc="base" valuetype="address" behavior="hidden" name="base"/>
  <atv:parameter config="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.20x20" desc="symbol login" valuetype="display" substitute="$SYMBOL$" group="Appearance" behavior="optional" name="symbolLogin" defaultvalue="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.20x20.login"/>
  <atv:parameter desc="symbol color login" valuetype="color" group="Appearance" behavior="optional" name="symbolColor" defaultvalue="#ffffff"/>
  <atv:parameter config="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.20x20" desc="symbol logout" valuetype="display" substitute="$SYMBOLLOGOUT$" group="Appearance" behavior="optional" name="symbolLogout" defaultvalue="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.20x20.logout"/>
  <atv:parameter desc="symbol color logout" valuetype="color" group="Appearance" behavior="optional" name="symbolColorLogout" defaultvalue="#ffffff"/>
  <atv:parameter desc="fill color" valuetype="color" substitute="$FILL$" group="Appearance" behavior="optional" name="fill" defaultvalue="#000000"/>
  <atv:parameter desc="fill color when inactive" valuetype="color" group="Appearance" behavior="optional" name="fillColorInactive" defaultvalue="#FFFFFF"/>
  <atv:parameter desc="stroke color when pressed" valuetype="color" group="Appearance" behavior="optional" name="strokePressed" defaultvalue="#FFFFFF"/>
  <atv:gridconfig width="5" enabled="true" height="5" gridstyle="lines"/>
  <atv:snapconfig width="5" enabled="true" height="5"/>
 </metadata>
 <g id="button_clickarea" atv:refpx="30" atv:refpy="15" transform="matrix(1,0,0,1,15,0)">
  <svg width="20" x="5" visibility="hidden" y="5" atv:bindtl="0.5,0.5" height="20" atv:bindbr="0.5,0.5" xlink:href="$SYMBOLLOGOUT$" id="button_symbol_pressed" atv:refpx="34.5" atv:refpy="49.5">
   <atv:argument prefix="symbolColorLogout" name="symbolColor"/>
  </svg>
  <svg width="20" x="5" y="5" atv:bindtl="0.5,0.5" height="20" atv:bindbr="0.5,0.5" xlink:href="$SYMBOL$" id="button_symbol" atv:refpx="34.5" atv:refpy="49.5">
   <atv:argument prefix="symbolColor" name="symbolColor"/>
  </svg>
 </g>
 <script type="text/ecmascript"><![CDATA[var strokeNormal = "none";
var strokePressed = webMI.query["strokePressed"];
var loggedIn = false;
var loginmethod = null;
var activatedEvents = true;

function setButton(fill, activateEvents) {
	webMI.gfx.setVisible("button_symbol_pressed", loggedIn);
	webMI.gfx.setVisible("button_symbol", !loggedIn);
	webMI.gfx.setFill("button_bg", fill ? webMI.query["fill"] : webMI.query["fillColorInactive"]);
	activatedEvents = activateEvents;
}

webMI.addOnload(function() {
	webMI.data.call("info",{},function(e) { //get information from webmi.js
		loginmethod = e.loginmethod;
		if(loginmethod == "none") {
			setButton(false, false);
			return;
		}
		webMI.addEvent(webMI.data, "clientvariableschange", function(e) {
			loggedIn = (e.username != "" && e.username != undefined);
			if(loggedIn && loginmethod == "form")
				webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.AutoLogout", {"action":"start"});
			if("username" in e) {
				if(loginmethod == "http" ||	loginmethod == "ntlm") //ntml is not defined in webmi
					setButton(false, false);
				else if(loginmethod == "form")
					setButton(true, true);
//					console.log("User Logon fire trigger");
					triggerLogon();

			}
			else if(e.username == undefined) //webMI2ADS 2.0.1 specific fix to enable login
				setButton(true, true);
		}
	);});
});

function setButtonEvents(strokeStyle, buttonFill, setStroke) {
	if(activatedEvents) {
		webMI.gfx.setStroke("button_stroke", strokeStyle ? strokePressed : strokeNormal);
		webMI.gfx.setFill("button_stroke", buttonFill ? "url(#linear_1)" : "url(#linear_5)");
		if(setStroke)
			webMI.gfx.setStrokeWidth("button_stroke", "1");
	}
}

webMI.addEvent("button_clickarea", "click", function(e) {
	// Check if the configuration of the PLC match each one of these cases of loggedIn, otherwhise it wonÂ´t work
	if (loggedIn == false && loginmethod == "form") {
		webMI.display.openWindow({display:"SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS.QINOUS.Elements.login_dialog",extern:false,height:300,menubar:false,modal:true,movable:true,resizable:true,scrollbars:false,status:false,title:"T{Login}",toolbar:false,width:500,query:webMI.query});
		
	} else if (loggedIn == false && loginmethod == "http") { //webMI2ADS 2.0.1 specific fix to enable login
		webMI.data.login();
		
	} else if (loggedIn == true && loginmethod == "form") {
		webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.AutoLogout", {"action":"manualLogout"});
		webMI.data.logout(function(){});
		webMI.display.openDisplay("GUI.DISPLAYS.MonitoringView", webMI.query);
	}
});



webMI.addEvent("button_clickarea", "mouseup", function(e) {
	setButtonEvents(false, true, false);
});

webMI.addEvent("button_clickarea", "mousedown", function(e) {
	setButtonEvents(true, false, false);
});

webMI.addEvent("button_clickarea", "mouseout", function(e) {
	setButtonEvents(false, true, true);
});

webMI.addEvent("button_clickarea", "dragstart", function(e) {
	if (e.preventDefault) {
		e.preventDefault();
	}
});

// trigger to components
function triggerLogon(){
	if (loggedIn == true){
		webMI.trigger.fire("userLogOn", true);
	}else {
		webMI.trigger.fire("userLogOn", false);
	}
}
document.getElementById('button_clickarea').style.cursor = 'pointer';


]]></script>
</svg>
