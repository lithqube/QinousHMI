<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg width="290" version="1.2" xmlns="http://www.w3.org/2000/svg" height="400" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:atv="http://webmi.atvise.com/2007/svgext">
 <defs/>
 <metadata>
  <atv:gridconfig width="10" enabled="true" height="10" gridstyle="lines"/>
  <atv:snapconfig width="10" enabled="true" height="10"/>
 </metadata>
 <g atv:insensitive="true" id="id_4" atv:refpx="0" atv:refpy="0" transform="matrix(1.45,0,0,1,0,0)">
  <rect width="200.00" x="0" y="0" fill="#fafaff" height="400.00" fill-opacity="0.9803921568627451" id="id_5" atv:refpx="100" atv:refpy="200"/>
 </g>
 <text x="14.5" y="46" fill="#000088" font-family="Arial" id="id_paramname" atv:refpx="36" atv:refpy="41.5" font-size="12">$name$</text>
 <text x="204.5" y="46" fill="#000088" font-family="Arial" id="id_unit" atv:refpx="215" atv:refpy="41.5" font-size="12">$unit$</text>
 <svg width="80" x="105" y="48" height="31" xlink:href="SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS.QINOUS.Elements.EditableLabel" id="id_valuefield" atv:refpx="145.001" atv:refpy="50" transform="matrix(1,0,0,0.6452,0,0)">
  <atv:argument value="#ffffff" name="fill"/>
  <atv:argument value="#ffffff" name="fillColorInactive"/>
  <atv:argument value="#647a8f" name="focusStrokeColor"/>
  <atv:argument value="#647a8f" name="fontColor"/>
  <atv:argument value="#ecf0f1" name="editingBackgroundColor"/>
  <atv:argument value="#00abe1" name="editingBorderColor"/>
  <atv:argument value="14" name="fontSize"/>
  <atv:argument value="GUI/DP_TEST/.Value_1" name="base"/>
  <atv:overwrite y="16.001" id="input_label" transform="matrix(1,0,0,1.5499,0,0)"/>
  <atv:overwrite height="19.001" id="input_bg" transform="matrix(1,0,0,1.5499,0,0)"/>
  <atv:overwrite height="35.501" id="blinking_frame" transform="matrix(1,0,0,1.5499,0,0)"/>
 </svg>
 <script type="text/ecmascript"><![CDATA[/*webMI.addOnload(function e(){
// Elements to Clone
var A = document.getElementById("id_paramname");
var RootA = A.parentElement;
var newA;

var B = document.getElementById("id_valuefield");
var RootB = B.parentElement;
var newB;

var C = document.getElementById("id_unit");
var RootC = C.parentElement;
var newC;

// Id Tags to change
var txt_paramname = document.getElementById("id_paramname");
var fld_dp_value = document.getElementById("id_valuefield");
var txt_unit = document.getElementById("id_unit");

var docprefix = "id_1_";

//Loop for clonation
for (var i = 1; i<=2; i++)
{
// Translate Move Factor
	var factorY = 30 * i;
	var factorX = 0;
	var move = "translate("+ factorX +","+ factorY +")";

// Clone elements
//- Parameter Name Element
	var newnameParameter = "id_paramname"+i;
	newA = A.cloneNode(true);
	newA.id = docprefix + newnameParameter;
	RootA.appendChild(newA);
	newA.setAttributeNS(null, "transform", move);
	webMI.gfx.setVisible(newnameParameter, true);

//- change ID Parameter name
	var parameter_name = "Parameter "+i;
	webMI.gfx.setText(txt_paramname, parameter_name);
	txt_paramname.id = "id_paramname"+i;


//- - DataPoint Value Element
	var factordpY = 47 * i;
	var factordpX = 0;
	var movedp = "translate("+ factordpX +","+ factordpY +")";

	var newnameValueField = "id_valuefield"+i;
	newB = B.cloneNode(true);
	newB.id = docprefix + newnameValueField;
	RootB.appendChild(newB);
	newB.setAttributeNS(null, "transform", movedp);
	webMI.gfx.setVisible(newnameValueField, true);

//- - Datapoint and ID Value field

	var dp = "GUI/DP_TEST/.Value_"+i;
	webMI.trigger.fire =("SetDp", dp, fld_dp_value);
	console.log("Attention Trigger send ----->")
	var new_fieldid = "fld_dp_value"+i;
	fld_dp_value.id.ownerDocument = docprefix + new_fieldid;


	myCallBack = function(field_id){
		var my_id = field_id;
		return function(f){
		if (f.value === undefined) {
				parameter_value = "datapoint undefined";

			} else {
				parameter_value = f.value;
			}
			var value_field = document.getElementById(my_id).ownerDocument;
//			console.log("Document found for "+my_id+" | the element "+value_field+ " | the value: "+parameter_value);
			webMI.gfx.setText(value_field, parameter_value);
		}
	}
	webMI.data.subscribe(dp, myCallBack(new_fieldid));

//- - - Unit Name Element
	var newnameUnit = "id_unit"+i;
	newC = C.cloneNode(true);
	newC.id = docprefix + newnameUnit;
	RootC.appendChild(newC);
	newC.setAttributeNS(null, "transform", move);
	webMI.gfx.setVisible(newnameUnit, true);



}// END For


});// END OnLoad
*/
var $ = top.$;
var factorY = 30;
var factorX = 0;
var move = "translate("+ factorX +","+ factorY +")";

var element = document.getElementById("myframe");
var element2 = document.getElementById("id_editbox");
for (var i = 1; i<=3; i++)
{
var newelement = $(element).clone().attr('id',"id_testjquery"+i);
newelement.appendTo(element.parentElement);
newelement.setAttributeNS(null, "transform", move);
console.log("Clone with jQuery");
}
]]></script>
 <svg width="232" x="20" y="80" height="25" xlink:href="SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS.QINOUS.Components.Config.ParameterValue" id="id_11" atv:refpx="136" atv:refpy="92.5"/>
</svg>
