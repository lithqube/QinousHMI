<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg width="85" xmlns:osb="http://www.openswatchbook.org/uri/2009/osb" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" version="1.2" xmlns:a="http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/" xmlns="http://www.w3.org/2000/svg" height="105" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:atvise="http://www.atvise.com/" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:svg="http://www.w3.org/2000/svg" xmlns:atv="http://webmi.atvise.com/2007/svgext">
 <defs>
  <linearGradient id="linear_0" y1="0" x1="0" y2="1" gradientUnits="objectBoundingBox" x2="1">
   <stop offset="0" stop-color="#ffffff"/>
   <stop offset="1" stop-color="#00c800"/>
  </linearGradient>
 </defs>
 <metadata>
  <atv:parameter desc="" valuetype="display" substitute="$svg$" behavior="mandatory" name="svg" defaultvalue="SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS.QINOUS.Elements.Battery"/>
  <atv:gridconfig width="3" enabled="true" height="3" gridstyle="lines"/>
  <atv:snapconfig width="3" enabled="true" height="3"/>
 </metadata>
 <g atv:insensitive="true" id="id_0" atv:refpx="0" atv:refpy="0" transform="matrix(0.0664,0,0,0.1367,0,0)"/>
 <rect width="83" x="1" y="0.909" fill="#ffffff" rx="5" height="48.182" ry="4.545" stroke="#8395a6" stroke-linejoin="round" id="brdr_icon" stroke-linecap="round" atv:refpx="42.572" stroke-width="1" atv:refpy="24.986"/>
 <svg width="512" x="69.322" y="88.902" fill="#647A8F" height="243.2" xlink:href="$svg$" id="icon_id" atv:refpx="42.503" atv:refpy="22.944" transform="matrix(0.1306,0,0,0.1187,0,0)"/>
 <svg width="100" x="0" y="0" height="31" xlink:href="SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS.FlatComponents.Clickarea" id="clickarea" atv:refpx="42.65" atv:refpy="25.204" transform="matrix(0.85,0,0,1.6129,0,0)">
  <atv:overwrite width="84" height="49" id="button_clickarea" transform="matrix(1.1765,0,0,0.62,0,0)"/>
  <atv:overwrite width="84" height="49" id="button_stroke_focus" transform="matrix(1.1765,0,0,0.62,0,0)"/>
 </svg>
 <line visibility="hidden" stroke="#647A8F" id="dropdown_line" y1="50" atv:refpx="43" x1="42.5" y2="72" stroke-width="3" atv:refpy="193" x2="42.5"/>
 <g visibility="hidden" id="dropdown_box" atv:refpx="42.5" atv:refpy="79.5">
  <rect width="85" x="0" y="69.5" fill="#ffffff" rx="5" height="20" stroke="#A0AEBA" id="dropdown" atv:refpx="42.5" stroke-width="1" atv:refpy="102.5"/>
  <polyline atv:bindtl="1,1" points="81.8,75.55 66,75.55 73.899,83.45 81.8,75.55" fill="#647A8F" stroke="none" atv:bindbr="1,1" id="drop" atv:refpx="81.772" stroke-width="0" atv:refpy="95.028"/>
  <text x="20.5" y="83" fill="#647A8F" font-family="Valera Round" id="rack_txt" atv:refpx="52.512" atv:refpy="76.5" font-size="11">T{RACK}</text>
 </g>
 <script type="text/ecmascript"><![CDATA[// Change Color on mouse over
// line
var $ = top.$;
var Group = "";
var selected = false;


var selectMenuIcon = function(){
	var idln = "brdr_icon";
	var id = "icon_id";
	document.getElementById("brdr_icon").setAttribute("stroke-width", "2");	
	webMI.gfx.setStroke(idln, "#00abe1");
//	document.getElementById(this).setAttribute("fill", "#00abe1");
	webMI.gfx.setFillOpacity(id, "0.5");
	
}

var deselectMenuIcon = function(){
	var idln = "brdr_icon";
	var id = "icon_id";
	document.getElementById("brdr_icon").setAttribute("stroke-width", "1");	
	webMI.gfx.setStroke(idln, "#8395a6");
	webMI.gfx.setFillOpacity(id, "1");
}


webMI.addEvent("clickarea", ["mouseover","touchstart"], function(e){
	selectMenuIcon();
	document.getElementById("clickarea").setAttribute('style', "cursor: pointer;");		
});

webMI.addEvent("clickarea", ["mouseout","touchend"], function(e){

	if (!selected) {
		deselectMenuIcon(e)
	}

});



webMI.trigger.connect("SelectMenuItem", function(e){
//	console.log("selecting icon for focus element");
	selected = true;
	selectMenuIcon()
});

webMI.trigger.connect("DeselectMenuItem", function(e){
	selected = false;
	deselectMenuIcon()
});


webMI.addEvent("clickarea", "click", function(e) {
	
//	console.log("menu item clicked...");
	if (typeof Group != 'undefined'){
		webMI.trigger.fire("SetCurrentNode", Group);	
	}
});

webMI.trigger.connect("SetInfo", function(e){

//	console.log("Menu item got group: "+e.value);
	Group = e.value;
	// TODO set tooltip text

});


webMI.addEvent("drop", ["mouseover","touchstart"], function(e){
	document.getElementById("drop").setAttribute('style', "cursor: pointer;");		
});



// Fonts
webMI.callExtension("SYSTEM.LIBRARY.PROJECT.QUICKDYNAMICS.Theme", {"action":"font family", "defaultValue":"font family", "id":"rack_txt", "key":"FontFamily", "property":""});

]]></script>
</svg>
