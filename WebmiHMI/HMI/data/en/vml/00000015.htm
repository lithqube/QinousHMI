<?xml version="1.0" encoding="UTF-8"?>
<html xmlns:atv="http://webmi.atvise.com/2007/svgext" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <title></title>
  <style>v\:*{behavior:url(#default#VML)}body{overflow:hidden}</style>
  <meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/>
 </head>
 <body>
  <v:group atv:coordfactor="100" atv:oe="2BC6E3AA8376L2KEE9ICI6H8M7O4P31F365AECD499I181IBLDHCP3HBN5KFQDC83" coordsize="96400,33900" id="webmivmlroot" style="height:339px;left:0;position:absolute;top:0;visibility:hidden;width:964px">
   <v:polyline fillcolor="#2b37cd" id="id_30" points="48000,900 52800,9200 96000,8900 80800,7200 11300,11400 2100,30100 48000,900 " strokecolor="#fc6571" stroked="true" strokeweight="3.75"/>
   <v:roundrect arcsize="0.095" atv:refpx="77914" atv:refpy="3524" fillcolor="#4a5055" id="box_performance" stroked="false" strokeweight="1.49" style="height:5871px;left:63500px;top:500px;width:31500px"/>
   <v:polyline fillcolor="#310b16" id="id_27" points="28500,26600 74300,0 35300,21500 81500,18300 30300,20700 92100,8800 67600,19000 60100,15700 77000,27300 28500,26600 " strokecolor="#49b857" stroked="true" strokeweight="3"/>
   <v:rect fillcolor="#4146d8" id="id_4" strokecolor="#33c206" stroked="true" strokeweight="3.75" style="height:2300px;left:80100px;top:29200px;width:400px"/>
   <v:line atv:refpx="74076" atv:refpy="1990" from="77198 2120" id="performance" to="277198 2220">
    <v:skew matrix="0.9581,0,0,0.9032" on="true" origin="-0.88599,-21.70184"/>
    <v:path textpathok="true"/>
    <v:fill color="#ffffff" on="true"/>
    <v:stroke on="false"/>
    <v:textpath on="true" string="Performance" style="font-family:'Varela Round';font-size:16px;v-text-align:left"/>
   </v:line>
   <v:rect fillcolor="#ced05f" id="id_21" strokecolor="#597fb1" stroked="true" strokeweight="2.25" style="height:3500px;left:53500px;top:16600px;width:42400px"/>
   <v:group atv:origtransform="matrix(1,0,0,1,635,52)" atv:refpx="204231" atv:refpy="26249" atv:table-height="335" atv:table-width="295" coordorigin="2200,3800" coordsize="92800,29700" id="monitoring" style="height:29700px;left:2200px;top:3800px;width:92800px">
    <v:line fillcolor="#b0cda0" from="81600,15800" id="id_29" strokecolor="#f42f12" stroked="true" strokeweight="3" to="153300,17000">
     <v:stroke joinstyle="miter"/>
    </v:line>
    <v:rect atv:refpx="103500" atv:refpy="35200" id="id_6" stroked="false" strokeweight="1" style="height:28000px;left:63500px;top:5500px;width:31500px"/>
    <v:polyline atv:matrix="1,0,0,1,635,52" fillcolor="#6441eb" id="id_19" points="70200,20700 103400,21700 133400,25500 155600,35100 151800,11700 136600,11500 91200,23200 153800,34600 65700,37900 73100,29000 91600,24900 139300,9000 123500,25800 66600,17400 70200,20700 " strokecolor="#dae5a9" stroked="true" strokeweight="3.75"/>
    <v:line fillcolor="#39d61d" from="145000,21800" id="id_5" strokecolor="#4026f8" stroked="true" strokeweight="3.75" to="99000,25200">
     <v:stroke joinstyle="miter"/>
    </v:line>
   </v:group>
   <v:oval fillcolor="#0b01b7" id="id_24" strokecolor="#dcc7af" stroked="true" strokeweight="1.5" style="height:14800px;left:51300px;top:-500px;width:14800px"/>
   <v:roundrect arcsize="0.086" atv:refpx="34279" atv:refpy="4468" fillcolor="#ffffff" id="box_manual" stroked="false" strokeweight="1.49" style="height:5500px;left:26000px;top:500px;width:17500px"/>
   <v:line fillcolor="#c7b2c2" from="12200,8600" id="id_9" strokecolor="#52a2fe" stroked="true" strokeweight="0.75" to="14000,11300">
    <v:stroke joinstyle="miter"/>
   </v:line>
   <v:group atv:origtransform="matrix(0.3119,0,0,0.294,0,0)" coordorigin="2900,300" coordsize="242042,33500" style="height:33500px;left:2900px;top:300px;width:242042px">
    <v:group atv:origx="34442" atv:origy="1643" atv:refpx="92.424" atv:refpy="27.199" coordsize="27300,9300" id="toogleSwitch" style="height:9300px;left:0;top:0;width:27300px">
     <v:roundrect arcsize="0.323" atv:refpx="14969" atv:refpy="1806" fillcolor="#647a8f" id="toogleSwitch_bckgrnd" stroked="false" strokeweight="0.45" style="height:2058px;left:10953px;top:806px;visibility:hidden;width:8109px"/>
     <v:line fillcolor="#2e2ba2" from="30954,2453" id="id_33" strokecolor="#926075" stroked="true" strokeweight="0.45" to="27835,3805">
      <v:stroke joinstyle="miter"/>
     </v:line>
     <v:polyline atv:matrix="0.3119,0,0,0.294,107.4255,4.8289" fillcolor="#2cb088" id="id_31" points="18478,3158 22751,6892 33480,3217 37628,571 15546,9773 25932,4070 22938,4658 11647,1953 18478,3158 " strokecolor="#e3740f" stroked="true" strokeweight="1.14"/>
     <v:polyline atv:matrix="0.3119,0,0,0.294,107.4255,4.8289" fillcolor="#3124f3" id="id_25" points="24840,4599 32139,5775 17292,2541 33574,600 36755,1629 26556,3687 33137,6098 23718,8656 14454,8803 23250,9391 38970,5099 30579,1188 22657,1806 " strokecolor="#9a2652" stroked="true" strokeweight="0.45">
      <v:stroke joinstyle="miter"/>
     </v:polyline>
     <v:line atv:refpx="7684" atv:refpy="5500" from="39492 6576" id="toogleSwitch_not_allowed" style="visibility:hidden" to="239492 6676">
      <v:skew matrix="0.3119,0,0,0.294" on="true" origin="-0.69746,-66.25833"/>
      <v:path textpathok="true"/>
      <v:fill color="#647A8F" on="true"/>
      <v:stroke on="false"/>
      <v:textpath on="true" string="BLOCKED" style="font-family:'Varela Round';font-size:35px;v-text-align:left"/>
     </v:line>
     <v:line fillcolor="#6d1fc6" from="21191,600" id="id_18" strokecolor="#2227f5" stroked="true" strokeweight="0.68" to="26462,5510">
      <v:stroke joinstyle="miter"/>
     </v:line>
     <v:line fillcolor="#3295b8" from="18478,7803" id="id_15" strokecolor="#25cf2f" stroked="true" strokeweight="0.23" to="24435,1277">
      <v:stroke joinstyle="miter"/>
     </v:line>
     <v:oval atv:refpx="12154" atv:refpy="1821" fillcolor="#ffffff" id="toogleSwitch_click_off" strokecolor="#647a8f" stroked="true" strokeweight="0.34" style="height:2646px;left:10789px;top:527px;visibility:hidden;width:2807px"/>
     <v:rect fillcolor="#bbb5e9" id="id_13" strokecolor="#1ca268" stroked="true" strokeweight="0.45" style="height:3763px;left:30423px;top:5863px;width:7392px"/>
     <v:oval atv:refpx="17768" atv:refpy="1821" fillcolor="#ffffff" id="toogleSwitch_click_on" strokecolor="#BEC7D0" stroked="true" strokeweight="0.34" style="height:2646px;left:16404px;top:527px;visibility:hidden;width:2807px"/>
     <v:polyline atv:matrix="0.3119,0,0,0.294,107.4255,4.8289" fillcolor="#73e7ce" id="id_22" points="17386,5422 21597,2982 30143,5922 18353,10420 39063,4158 14704,1424 17511,6422 24435,4217 27086,5275 22626,10214 27928,1571 11959,3335 " strokecolor="#faee74" stroked="true" strokeweight="0.91">
      <v:stroke joinstyle="miter"/>
     </v:polyline>
     <v:line atv:refpx="14615" atv:refpy="5650" from="44942 6576" id="toogleSwitch_text_off" style="visibility:hidden" to="244942 6676">
      <v:skew matrix="0.3119,0,0,0.294" on="true" origin="-0.72471,-66.25833"/>
      <v:path textpathok="true"/>
      <v:fill color="#ffffff" on="true"/>
      <v:stroke on="false"/>
      <v:textpath on="true" string="LOCAL" style="font-family:'Varela Round';font-size:35px;v-text-align:left"/>
     </v:line>
     <v:polyline atv:matrix="0.3119,0,0,0.294,107.4255,4.8289" fillcolor="#31b8a5" id="id_26" points="16762,1923 26618,4746 29893,8333 20910,4217 11959,8509 38003,7509 31141,5922 " strokecolor="#7f25b7" stroked="true" strokeweight="0.23">
      <v:stroke joinstyle="miter"/>
     </v:polyline>
     <v:line atv:refpx="5434" atv:refpy="5150" from="35842 6576" id="toogleSwitch_text_on" style="visibility:hidden" to="235842 6676">
      <v:skew matrix="0.3119,0,0,0.294" on="true" origin="-0.67921,-66.25833"/>
      <v:path textpathok="true"/>
      <v:fill color="#647A8F" on="true"/>
      <v:stroke on="false"/>
      <v:textpath on="true" string="REMOTE" style="font-family:'Varela Round';font-size:35px;v-text-align:left"/>
     </v:line>
     <v:oval fillcolor="#a15fe5" id="id_14" strokecolor="#6f8da5" stroked="true" strokeweight="0.45" style="height:9114px;left:17105px;top:3864px;width:9669px"/>
    </v:group>
   </v:group>
   <v:line fillcolor="#9f7f25" from="30800,18100" id="id_16" strokecolor="#1221d1" stroked="true" strokeweight="2.25" to="88900,18100">
    <v:stroke joinstyle="miter"/>
   </v:line>
   <v:line atv:refpx="32355" atv:refpy="2271" from="33970 2120" id="title_manual" to="233970 2220">
    <v:skew matrix="0.9581,0,0,0.9032" on="true" origin="-0.66985,-21.70184"/>
    <v:path textpathok="true"/>
    <v:fill color="#8b98a5" on="true"/>
    <v:stroke on="false"/>
    <v:textpath on="true" string="Direct" style="font-family:'Varela Round';font-size:16px;v-text-align:left"/>
   </v:line>
   <v:polyline fillcolor="#45eb91" id="id_8" points="15200,9700 33900,7500 76900,14800 94000,15300 14900,23800 7600,6300 4500,10800 10900,7600 15200,9700 " strokecolor="#9ecabc" stroked="true" strokeweight="2.25"/>
   <v:oval fillcolor="#fadc62" id="id_1" strokecolor="#2be3b4" stroked="true" strokeweight="3" style="height:1400px;left:40600px;top:6700px;width:18000px"/>
   <v:polyline fillcolor="#fe00fc" id="id_23" points="42400,26800 16100,17600 33500,31800 47900,30800 35200,8800 43200,19100 21200,26600 24600,10500 " strokecolor="#9a718b" stroked="true" strokeweight="1.5">
    <v:stroke joinstyle="miter"/>
   </v:polyline>
   <v:roundrect arcsize="0.082" atv:refpx="52906" atv:refpy="4468" fillcolor="#ffffff" id="box_remote" stroked="false" strokeweight="1.49" style="height:5500px;left:44000px;top:500px;width:18000px"/>
   <v:line fillcolor="#435d66" from="38200,17000" id="id_2" strokecolor="#be4611" stroked="true" strokeweight="2.25" to="91700,13100">
    <v:stroke joinstyle="miter"/>
   </v:line>
   <v:group atv:origtransform="matrix(1,0,0,1,20,55)" atv:refpx="31083" atv:refpy="23633" atv:table-height="260" atv:table-width="640" coordorigin="2000,5500" coordsize="60000,28000" id="commands" style="height:28000px;left:2000px;top:5500px;width:60000px">
    <v:rect atv:refpx="42000" atv:refpy="35500" id="rect1" stroked="false" strokeweight="1" style="height:28000px;left:2000px;top:5500px;width:60000px"/>
   </v:group>
   <v:polyline fillcolor="#e83e53" id="id_28" points="90100,12000 38500,32600 20300,7500 90400,21000 70600,26800 31600,32100 15700,16900 94000,9700 89000,17700 24800,24300 35500,0 90400,27400 39600,3300 90100,12000 " strokecolor="#a911f3" stroked="true" strokeweight="1.5"/>
   <v:oval fillcolor="#cb58e8" id="id_20" strokecolor="#298af5" stroked="true" strokeweight="3.75" style="height:35800px;left:18300px;top:-8500px;width:35800px"/>
   <v:group atv:refpx="53000" atv:refpy="2013" coordorigin="8600,800" coordsize="238019,32100" id="dropdown_remote" style="height:32100px;left:8600px;top:800px;width:238019px">
    <v:roundrect arcsize="0.294" atv:refpx="-3017" atv:refpy="5345" filled="false" id="bckgrnd_dropdown" strokecolor="#8b98a5" stroked="true" strokeweight="1.05" style="height:1859px;left:47379px;top:1000px;width:10864px"/>
    <v:polyline fillcolor="#6d7654" id="id_17" points="41500,11200 74200,13800 8600,22500 83800,8400 13000,19300 81400,9000 " strokecolor="#70e1f9" stroked="true" strokeweight="0.75">
     <v:stroke joinstyle="miter"/>
    </v:polyline>
    <v:line atv:refpx="4761" atv:refpy="2460" from="46619 2257" id="txt_dropdown" to="246619 2357">
     <v:skew matrix="1.0267,0,0,0.8602" on="true" origin="-0.73309,-23.06553"/>
     <v:path textpathok="true"/>
     <v:fill color="#8b98a5" on="true"/>
     <v:stroke on="false"/>
     <v:textpath on="true" string="Command" style="font-family:'Varela Round';font-size:16px;v-text-align:left"/>
    </v:line>
    <v:line fillcolor="#f4d448" from="11600,32900" id="id_32" strokecolor="#57dbd0" stroked="true" strokeweight="2.25" to="38000,21400">
     <v:stroke joinstyle="miter"/>
    </v:line>
    <v:polyline atv:bindbr="1,1" atv:bindtl="1,1" atv:refpx="8177" atv:refpy="9503" fillcolor="#8b98a5" id="icon_dropdown" points="58077,1659 56455,1659 57266,2339 58077,1659 " stroked="false" strokeweight="0">
     <v:stroke joinstyle="miter"/>
    </v:polyline>
    <v:polyline fillcolor="#a4fb30" id="id_10" points="88000,14200 66100,25300 27200,800 52600,19000 39600,17200 13600,30900 19800,23000 10100,5200 88000,14200 " strokecolor="#edc07b" stroked="true" strokeweight="2.25"/>
   </v:group>
  </v:group>
  <script type="text/javascript" src="../../webmi.js"></script>
  <script type="text/javascript" src="/js/jquery.min.js"></script>
  <script type="text/javascript" src="/q/TableFunctions.js"></script>
  <script type="text/javascript" src="/q/StdConstantsFunctions.js"></script>
  <script type="text/javascript" src="/q/ControlDatasets.js"></script>
  <script type="text/javascript">//<![CDATA[
webMI.proxy({"":[function(webMI,window,document,self){var $ = top.$;
var commandHeaders = [];
var monitoringHeaders = [];

var	RowHeight = 30,
	linefill = "#FFFFFF",
	columnfill = "#FFFFFF"; 
var remoteCommand = document.getElementById("dropdown_remote"),
	boxManual = document.getElementById("box_manual"),
	boxRemote = document.getElementById("box_remote"),
	titleManual = document.getElementById("title_manual"),

	textDropdown = document.getElementById("txt_dropdown"),
	bckgrndDropdown = document.getElementById("bckgrnd_dropdown"),
	iconDropdown = document.getElementById("icon_dropdown"),
	AppyControls = webMI.hasRight(APPLY_CONTROLS);


// setup blank tables
console.log("Setting up empty tables...");
var commandsTable = webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Table", { "gElement": document.getElementById("commands"),"sortedByColumn":0, "autoResize":true, "height":280, "width":600});
commandsTable.setConfiguration({rowHeight:RowHeight, sortingUp:false, drawStatusBar:false});
commandHeaders.push({name: "Parameter ", width: 180, fontSize: fontSize});
commandHeaders.push({name: "Unit", width: 60, fontSize: fontSize});
commandHeaders.push({name: "Value", width: 140, fontSize: fontSize});
commandHeaders.push({name: "Set", width: 35, fontSize: fontSize});
commandHeaders.push({name: "", width: 5,   fill:columnfill, fontSize: fontSize});
commandHeaders.push({name: "Value", width: 180, fontSize: fontSize});
commandsTable.setHeaders(commandHeaders);

var monitoringTable = webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Table", { "gElement": document.getElementById("monitoring"),"sortedByColumn":0, "autoResize":true, "height":280, "width":315});
monitoringTable.setConfiguration({rowHeight:RowHeight,sortingUp:false, drawStatusBar:false});
monitoringHeaders.push({name: "Monitor", width: 130, fontSize: fontSize});
monitoringHeaders.push({name: "Value", width: 100, fontSize: fontSize});
monitoringHeaders.push({name: "Unit", width: 85, fontSize: fontSize});
monitoringTable.setHeaders(monitoringHeaders);


var selectedRemoteControl = 3;

var manualCommandsList;
var remoteCommandsList;
var monitorValuesList;
var nodeOfControlledComponent;

var controlModeDPRead;
var controlModeDPWrite;


getRowFunction = function(col, table){

	return function(dp) {

		var curData = table.dataProvider().source.data;
		for (var i=0; i<curData.length; i++) {	
			if(curData[i][col].dp == dp) {
				//console.log("Updating row ", i, " for dp ", dp);
				return i +1;
			}
		};
	}
}

// Microinteractions 

if (AppyControls){	
//	console.log("appl controls allowed");	
	webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Open Context Menu", {"fontSize":"16", "id":"dropdown_remote", "itemsCount":"0", "key1":"Qinous", "key2":"Modbus", "key3":"IEC", "key4":"", "key5":"", "minWidth":"90", "onEvent":"click", "outputNode":"", "trigger":"remoteSelection", "value1":"3", "value2":"4", "value3":"5", "value4":"", "value5":"", "x":"455", "y":"30"});
}else{
//	console.log("no control allowed");	
	webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Open PopUp", {"PopUp":"00000016", "extern":"true", "height":"70", "id":"dropdown_remote", "menubar":"false", "modal":"true", "moveable":"true", "onEvent":"click", "passParameters":"true", "resizeable":"true", "scrollbars":"false", "status":"false", "title":" ERROR", "toolbar":"false", "width":"700"});
}

webMI.trigger.connect("SetMonitoringNode", function(e) {

	nodeOfControlledComponent	= e.value;

	commandsList				= getCommandsList(nodeOfControlledComponent.Type);
	monitorValuesList			= getMonitoringList(nodeOfControlledComponent.Type);

//	console.log("have some lists for the control view ", commandsList, monitorValuesList);
	UpdateTables(nodeOfControlledComponent);

	controlModeDPRead = activeControlPlaceDP(nodeOfControlledComponent);
	controlModeDPWrite = setControlPlaceDP(nodeOfControlledComponent);
//	console.log("have the read and write DPS ", controlModeDPRead, controlModeDPWrite);

// control place switching 
	webMI.data.subscribe(controlModeDPRead, function(e) {

		currentControlMode = parseInt(e.value);

//		console.log("Control place updated....", currentControlMode);
		webMI.trigger.fire("setToggleStatus", currentControlMode, "toogleSwitch");

		switch (currentControlMode) {
		  case CONTROL_BLOCKED: 
			controlBlockedActive ();
			break;
		  case CONTROL_GUI: //GUI
			controlGUIActive();
			break;
		  default:
			selectedRemoteControl = currentControlMode;
			controlExternalActive();
		}					
		UpdateTables(nodeOfControlledComponent);
	});	
	
	webMI.trigger.connect("RequestRemoteControl", function(e) {
//		console.log("Remote control requested, writing....");
		webMI.data.write(controlModeDPWrite,selectedRemoteControl);
	
	});
	
	webMI.trigger.connect("RequestGUIControl", function(e) {
//		console.log("GUI control requested, writing...");
		webMI.data.write(controlModeDPWrite,CONTROL_GUI);
	
	});
	
	
	webMI.trigger.connect("remoteSelection", function(e){
//		console.log("remote selected?");
		selectedRemoteControl = parseInt(e.value);
	
		if (currentControlMode != CONTROL_GUI) {
	
			webMI.data.write(controlModeDPWrite,selectedRemoteControl);
	
		}
		UpdateTables(nodeOfControlledComponent);
	
	});
});


//console.log("requesting the current node");
webMI.trigger.fire("MonitoringNodeRequest");

function initializeCommandsTable(manualRoot, remoteRoot, valueList, table){

// Security control
	var hasWriteAccess = webMI.hasRight(APPLY_CONTROLS);

//initialize table
	var nodearray = [];
	for (var i=0; i<valueList.length; i++) {	
//		//console.log("=====================================Looking at : ", valueList[i]);
		var datarow = [];
	
		datarow[0] = {text: valueList[i].ParamName, fill:linefill, fontSize: fontcolumn};
		datarow[1] = {text: valueList[i].Unit, fill:linefill, fontSize: fontcolumn};
		datarow[2] = {text: "...", fill:linefill, dp:manualRoot + valueList[i].DP};
		// to do add conditional to manage the array text of the array
		if (hasWriteAccess) {
			var eventList = [{name: "click", fn: getWriteFunction(manualRoot + valueList[i].DP, valueList[i].Type)}];
			datarow[3] = {text: "SET", fill:linefill, eventList: eventList};	
		} else {
			datarow[3] = {text: "", fill:linefill}; 
		}
		datarow[4] = {text: "", fill:columnfill, fontSize: fontcolumn};
		datarow[5] = {text: "...", fill:linefill, fontSize: fontcolumn, dp:remoteRoot + valueList[i].DP};
		nodearray[i] = datarow;	
	}
	table.setDataProvider({data: nodearray});

	//Set Update Function
	// Error try to debug error on the click down table update this for loop 1/2 sec
	for (var i=0; i<valueList.length; i++) {
		addSubscribe(3, getRowFunction(2, table), manualRoot + valueList[i].DP, valueList[i].Type, table);
		addSubscribe(6, getRowFunction(5, table), remoteRoot + valueList[i].DP, valueList[i].Type, table);
	}
}


function initializeMonitoringTable(monitoringRoot, valueList, table){

	//initialize table
	var nodearray = [];
	for (var i=0; i<valueList.length; i++) {	
//		//console.log("=====================================Looking at : ", valueList[i]);
		var datarow = [];
	
		datarow[0] = {text: valueList[i].ParamName, fill:linefill, fontSize: fontcolumn};
		datarow[1] = {text: "...", fill:linefill, fontSize: fontcolumn, dp:monitoringRoot + valueList[i].DP};
		datarow[2] = {text: valueList[i].Unit, fill:linefill, fontSize: fontcolumn};
		nodearray[i] = datarow;	
	}
	table.setDataProvider({data: nodearray});

	//Set Update Function
	for (var i=0; i<valueList.length; i++) {
		addSubscribe(2, getRowFunction(1, table), monitoringRoot + valueList[i].DP, valueList[i].Type, table);
	}
}

//initializeCommandsTable(manualRoot, remoteRoot, BCUCommands, commandsTable);
//initializeMonitoringTable(monitoringRoot, BCUMonitoringValues, monitoringTable);


function getControlsDP(node, place){

	var svi = "/"+node.TaskName+"/."+getComponentShortForm(node.Type)+"Control_";

	switch (place) {
		case CONTROL_BLOCKED:
			svi = svi+"Blocked";
			break;
		case CONTROL_GUI:
			svi = svi+"GUI";
			break;
		case CONTROL_QINOUS:
			svi = svi+"Qinous";
			break;
		case CONTROL_MODBUS:
			svi = svi+"Modbus";
			break;
		case CONTROL_IEC_104:
			svi = svi+"IEC60870";
			break;
	}

	svi = svi+"["+node.Index+"]";

	return svi;
}


function setControlPlaceDP(node){
	var svi = "/"+node.TaskName+"/." + getComponentShortForm(node.Type) + "_SetControlPlace[" + node.Index + "]";

	return svi;
}


function activeControlPlaceDP(node){
	return monitoringRoot+".ControlStatus.ControlPlace";
}

function UpdateTables(node){

	manualRoot = getControlsDP(node, CONTROL_GUI);
	remoteRoot = getControlsDP(node, selectedRemoteControl);
	monitoringRoot = node.DataDP;

//	console.log("main data for tables ", manualRoot, "===",remoteRoot,  "===",monitoringRoot,  "===",node);

	// update drop down box in tables
	switch (selectedRemoteControl) {
	  case CONTROL_QINOUS:
		textDropdown.textContent = "Qinous";
		break;
	  case CONTROL_MODBUS:
		textDropdown.textContent = "Modbus";
		break;
	  case CONTROL_IEC_104:
		textDropdown.textContent = "IEC";			
		break;
	  default:
		textDropdown.textContent = "Unknown ("+selectedRemoteControl+")";			
	
	}

	// clear tables first!
//	console.log("removing all rows");
	commandsTable.removeAllRows();
	monitoringTable.removeAllRows();
	//initialize table
//	console.log("filling tables");
	initializeCommandsTable(manualRoot, remoteRoot, commandsList, commandsTable);
	initializeMonitoringTable(monitoringRoot, monitorValuesList, monitoringTable);

}

function getComponentShortForm(type){

	switch (type){
	case TYPE_BATTERY:
		return "BCU";
	case TYPE_PV:
		return "PV";
	case TYPE_DIESEL:
		return "Diesel";
	case TYPE_SYSTEM:
		return "System";
	//TYPE_PV_GROUP = 101;
	//TYPE_CONSUMER_GROUP = 102;
	//TYPE_BATTERY_GROUP = 104;
	//TYPE_DIESEL_GROUP = 105;
	}
}

function controlBlockedActive (){
	boxManual.setAttribute("fill","#FAFAFA");
	boxRemote.setAttribute("fill","#FAFAFA");		
	titleManual.setAttribute("fill","#EBE8E5");
	remoteCommand.setAttribute("visibility","visible");
//	remoteCommand.setAttribute('style', "cursor: not-allowed;");		
	bckgrndDropdown.setAttribute("stroke","#EBE8E5");
	iconDropdown.setAttribute("fill","#EBE8E5");
	textDropdown.setAttribute("fill","#EBE8E5");
}

function controlGUIActive(){
	remoteCommand.setAttribute("visibility","visible");
	boxManual.setAttribute("fill","#4A5055");
	boxRemote.setAttribute("fill","#FAFAFA");		
	bckgrndDropdown.setAttribute("stroke","#E3E5E5");
	iconDropdown.setAttribute("fill","#E3E5E5");
	textDropdown.setAttribute("fill","#E3E5E5");

	titleManual.setAttribute("fill","#FFFFFF");
	bckgrndDropdown.setAttribute("stroke","#EBE8E5");
	iconDropdown.setAttribute("fill","#EBE8E5");
	textDropdown.setAttribute("fill","#EBE8E5");
}	

function controlExternalActive(){
	remoteCommand.setAttribute("visibility","visible");

	titleManual.setAttribute("fill","#E3E5E5");
	boxRemote.setAttribute("fill","#4A5055");		
	boxManual.setAttribute("fill","#FAFAFA");
	bckgrndDropdown.setAttribute("stroke","#FFFFFF");
	iconDropdown.setAttribute("fill","#FFFFFF");
	textDropdown.setAttribute("fill","#FFFFFF");

}



webMI.addEvent("icon_dropdown", ["mouseover","touchstart"], function(e){
	document.getElementById("icon_dropdown").setAttribute('style', "cursor: pointer;");		
});


// Fonts
webMI.callExtension("SYSTEM.LIBRARY.PROJECT.QUICKDYNAMICS.Theme", {"action":"font family", "defaultValue":"font family", "id":"commands", "key":"FontFamily", "property":""});
webMI.callExtension("SYSTEM.LIBRARY.PROJECT.QUICKDYNAMICS.Theme", {"action":"font family", "defaultValue":"font family", "id":"monitoring", "key":"FontFamily", "property":""});
webMI.callExtension("SYSTEM.LIBRARY.PROJECT.QUICKDYNAMICS.Theme", {"action":"font family", "defaultValue":"font family", "id":"monitoring", "key":"FontFamily", "property":""});
webMI.callExtension("SYSTEM.LIBRARY.PROJECT.QUICKDYNAMICS.Theme", {"action":"font family", "defaultValue":"font family", "id":"performance", "key":"FontFamily", "property":""});

webMI.callExtension("SYSTEM.LIBRARY.PROJECT.QUICKDYNAMICS.Theme", {"action":"font family", "defaultValue":"font family", "id":"title_manual", "key":"FontFamily", "property":""});

webMI.callExtension("SYSTEM.LIBRARY.PROJECT.QUICKDYNAMICS.Theme", {"action":"font family", "defaultValue":"font family", "id":"txt_dropdown", "key":"FontFamily", "property":""});
},{"toogleSwitch":["1",{}]},{}],"1":[function(webMI,window,document,self){var factorX = 235,
	block = document.getElementById("not_allowed"),
	off = document.getElementById("click_off"),
	on = document.getElementById("click_on"),
	off_text = document.getElementById("text_on"),
	on_text = document.getElementById("text_off"),
	bck = document.getElementById("bckgrnd"),

	AppyControls = webMI.hasRight(APPLY_CONTROLS);


// Check Toogle Status

webMI.trigger.connect("setToggleStatus", function(e){	
	switch (e.value) {
	  case 1:
		setBlock()
		break;
	  case 2:
		setManual()
		break;
	  case 3:
		setRemote()
		break;
	  case 4:
		setRemote()
		break;
	  case 5:
		setRemote()
		break;

	  default:  unknown; 
	}	
});
	
// Events

webMI.addEvent("click_off", ["click","touchend"], function(e) {
	webMI.trigger.fire("RequestRemoteControl");
});

webMI.addEvent("click_on", ["click","touchend"], function(e) {
	webMI.trigger.fire("RequestGUIControl");
});

webMI.addEvent("click_off", ["mouseover","touchstart"], function(e){
	document.getElementById("click_off").setAttribute('style', "cursor: pointer;");		
});

webMI.addEvent("click_on", ["mouseover","touchstart"], function(e){
	document.getElementById("click_on").setAttribute('style', "cursor: pointer;");		
});


// Functions
function setBlock(){
	bck.setAttribute("visibility","visible");
	bck.setAttribute("fill","#DFDFDF");
	bck.setAttribute('style', "cursor: not-allowed;");		
	block.setAttribute("visibility","visible");
	block.setAttribute('style', "cursor: not-allowed;");		
	on.setAttribute("visibility","hidden");
	off_text.setAttribute("visibility","hidden");
	off.setAttribute("visibility","hidden");
	on_text.setAttribute("visibility","hidden");
}
function setRemote(){
	bck.setAttribute("visibility","visible");
	bck.setAttribute("fill","#BEC7D0");
	block.setAttribute("visibility","hidden");
	off.setAttribute("visibility","hidden");
	on_text.setAttribute("visibility","hidden");
	on.setAttribute("visibility","visible");
	off_text.setAttribute("visibility","visible");
}

function setManual(){
	bck.setAttribute("visibility","visible");
	bck.setAttribute("fill","#647a8f");
	block.setAttribute("visibility","hidden");
	on.setAttribute("visibility","hidden");
	off_text.setAttribute("visibility","hidden");
	off.setAttribute("visibility","visible");
	on_text.setAttribute("visibility","visible");
}

// Fonts
webMI.callExtension("SYSTEM.LIBRARY.PROJECT.QUICKDYNAMICS.Theme", {"action":"font family", "defaultValue":"font family", "id":"text_off", "key":"FontFamily", "property":""});
webMI.callExtension("SYSTEM.LIBRARY.PROJECT.QUICKDYNAMICS.Theme", {"action":"font family", "defaultValue":"font family", "id":"text_on", "key":"FontFamily", "property":""});
webMI.callExtension("SYSTEM.LIBRARY.PROJECT.QUICKDYNAMICS.Theme", {"action":"font family", "defaultValue":"font family", "id":"not_allowed", "key":"FontFamily", "property":""});
},{},{}]},window);
//]]></script>
 </body>
</html>
