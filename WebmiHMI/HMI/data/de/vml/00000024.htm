<?xml version="1.0" encoding="UTF-8"?>
<html xmlns:atv="http://webmi.atvise.com/2007/svgext" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <title>Login dialog</title>
  <style>v\:*{behavior:url(#default#VML)}body{overflow:hidden}</style>
  <meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/>
 </head>
 <body>
  <v:group atv:coordfactor="100" atv:oe="2BC6E3AA8376K2JED9HCH6G8L7O4P31F365AECD499I181IBLDHCP3HBN5KFQDC83" coordsize="43000,28000" id="webmivmlroot" style="height:280px;left:0;position:absolute;top:0;visibility:hidden;width:430px">
   <v:rect atv:refpx="21500" atv:refpy="14000" filled="false" id="background" stroked="false" strokeweight="0" style="height:28000px;left:0px;top:0px;width:43000px"/>
   <v:roundrect arcsize="0.2" atv:refpx="-18614" atv:refpy="10500" filled="false" id="id_13" strokecolor="#647a8f" stroked="true" strokeweight="1.5" style="height:5000px;left:2000px;top:13200px;width:39000px"/>
   <v:roundrect arcsize="0.2" atv:refpx="21500" atv:refpy="11500" filled="false" id="username_background" strokecolor="#647a8f" stroked="true" strokeweight="1.5" style="height:5000px;left:2000px;top:7200px;width:39000px"/>
   <v:group atv:origtransform="matrix(1.4375,0,0,1.3333,0,0)" coordorigin="-160851,0" coordsize="200828,11675" style="height:11675px;left:-160851px;top:0px;width:200828px">
    <v:group atv:origx="11826" atv:origy="5775" atv:refpx="285" atv:refpy="115" coordsize="16000,3000" id="username_input" style="height:3000px;left:0;top:0;width:16000px">
     <v:shapetype id="1linear_12">
      <v:fill angle="180" colors="0 #49494a, 1 #647A8F, 1 #647A8F" method="none" rotate="true" type="gradient"/>
     </v:shapetype>
     <v:shapetype id="1linear_0">
      <v:fill angle="0" colors="0 #49494a, 0.8955 #647A8F, 1 #647A8F" method="none" rotate="true" type="gradient"/>
     </v:shapetype>
     <v:group atv:refpx="17000" atv:refpy="7700" coordorigin="0,0" coordsize="0,0" id="username_input_input_element" style="height:0px;left:0px;top:0px;width:0px"/>
     <v:group atv:refpx="28500" atv:refpy="9700" coordorigin="-160851,7725" coordsize="200828,3950" id="username_input_svg_input" style="height:3950px;left:-160851px;top:7725px;width:200828px">
      <v:roundrect arcsize="0.127" atv:bindbr="1,1" atv:bindtl="0,0" atv:refpx="28536" atv:refpy="9766" filled="false" id="username_input_id_0" stroked="false" strokeweight="0" style="height:3950px;left:17025px;top:7725px;width:22952px"/>
      <v:roundrect arcsize="0.145" atv:bindbr="1,1" atv:bindtl="0,0" atv:refpx="33927" atv:refpy="6433" fillcolor="none)" id="username_input_id_2" stroked="false" strokeweight="0" style="height:3450px;left:17275px;top:7975px;width:22452px"/>
      <v:roundrect arcsize="0.154" atv:bindbr="1,1" atv:bindtl="0,0" atv:refpx="34852" atv:refpy="10200" fillcolor="#ffffff" id="username_input_input_bg" stroked="false" strokeweight="0" style="height:3250px;left:17400px;top:8075px;width:22202px"/>
      <v:roundrect arcsize="0.154" atv:bindbr="1,1" atv:bindtl="0,0" atv:refpx="34852" atv:refpy="10200" filled="false" id="username_input_blinking_frame" stroked="false" strokeweight="0" style="height:3250px;left:17400px;top:8075px;width:22202px"/>
      <v:line atv:bindbr="1,0.5" atv:bindtl="1,0.5" atv:refpx="17191" atv:refpy="1527" from="-160851 9725" id="username_input_input_label" to="39149 9825">
       <v:skew matrix="1.0001,0,0,1" on="true" origin="0.30426,-97.75"/>
       <v:path textpathok="true"/>
       <v:fill color="#647A8F" on="true"/>
       <v:stroke on="false"/>
       <v:textpath on="true" string="Ein-/Ausgabeelement" style="font-family:'Open Sans';font-size:12px;v-text-align:right"/>
      </v:line>
     </v:group>
    </v:group>
   </v:group>
   <v:group atv:origtransform="matrix(1.4375,0,0,1.3333,0,0)" coordorigin="-160851,0" coordsize="235639,60232" style="height:60232px;left:-160851px;top:0px;width:235639px">
    <v:group atv:origx="11826" atv:origy="10275" atv:refpx="285" atv:refpy="175" coordsize="16000,3000" id="password_input" style="height:3000px;left:0;top:0;width:16000px">
     <v:group atv:refpx="17000" atv:refpy="13700" coordorigin="0,0" coordsize="0,0" id="password_input_input_element" style="height:0px;left:0px;top:0px;width:0px"/>
     <v:group atv:refpx="28500" atv:refpy="15700" coordorigin="-160851,12633" coordsize="235639,47599" id="password_input_svg_input" style="height:47599px;left:-160851px;top:12633px;width:235639px">
      <v:roundrect arcsize="0.127" atv:bindbr="1,1" atv:bindtl="0,0" atv:refpx="28536" atv:refpy="15766" filled="false" id="password_input_id_0" stroked="false" strokeweight="0" style="height:3950px;left:17025px;top:13725px;width:22952px"/>
      <v:oval fillcolor="#085ef8" id="id_10" strokecolor="#ed33c4" stroked="true" strokeweight="5.2" style="height:23733px;left:45175px;top:36499px;width:25588px"/>
      <v:roundrect arcsize="0.145" atv:bindbr="1,1" atv:bindtl="0,0" atv:refpx="33927" atv:refpy="12433" fillcolor="none)" id="password_input_id_2" stroked="false" strokeweight="0" style="height:3450px;left:17275px;top:13975px;width:22452px"/>
      <v:oval fillcolor="#4edcfe" id="id_16" strokecolor="#794904" stroked="true" strokeweight="2.08" style="height:10933px;left:63000px;top:12633px;width:11788px"/>
      <v:roundrect arcsize="0.154" atv:bindbr="1,1" atv:bindtl="0,0" atv:refpx="34852" atv:refpy="16200" fillcolor="#ffffff" id="password_input_input_bg" stroked="false" strokeweight="0" style="height:3250px;left:17400px;top:14075px;width:22202px"/>
      <v:roundrect arcsize="0.154" atv:bindbr="1,1" atv:bindtl="0,0" atv:refpx="34852" atv:refpy="16200" filled="false" id="password_input_blinking_frame" stroked="false" strokeweight="0" style="height:3250px;left:17400px;top:14075px;width:22202px"/>
      <v:line atv:bindbr="1,0.5" atv:bindtl="1,0.5" atv:refpx="17191" atv:refpy="1527" from="-160851 15725" id="password_input_input_label" to="39149 15825">
       <v:skew matrix="1.0001,0,0,1" on="true" origin="0.30426,-157.75"/>
       <v:path textpathok="true"/>
       <v:fill color="#647A8F" on="true"/>
       <v:stroke on="false"/>
       <v:textpath on="true" string="Ein-/Ausgabeelement" style="font-family:'Open Sans';font-size:12px;v-text-align:right"/>
      </v:line>
      <v:oval fillcolor="#6ce9d7" id="id_15" strokecolor="#3768df" stroked="true" strokeweight="2.08" style="height:16266px;left:19588px;top:35432px;width:29325px"/>
     </v:group>
    </v:group>
   </v:group>
   <v:line atv:refpx="7950" atv:refpy="9550" from="3400 9483" id="username_label" to="203400 9583">
    <v:path textpathok="true"/>
    <v:fill color="#647a8f" on="true"/>
    <v:stroke on="false"/>
    <v:textpath on="true" string="Benutzername" style="font-family:'Arial';font-size:20px;v-text-align:left"/>
   </v:line>
   <v:line fillcolor="#e45910" from="29500,8100" id="id_25" strokecolor="#c1d9c6" stroked="true" strokeweight="3.75" to="300,27600">
    <v:stroke joinstyle="miter"/>
   </v:line>
   <v:line atv:refpx="7850" atv:refpy="15550" from="3400 15483" id="password_label" to="203400 15583">
    <v:path textpathok="true"/>
    <v:fill color="#647a8f" on="true"/>
    <v:stroke on="false"/>
    <v:textpath on="true" string="Passwort" style="font-family:'Arial';font-size:20px;v-text-align:left"/>
   </v:line>
   <v:group coordorigin="-72925,73" coordsize="200000,46603" style="height:46603px;left:-72925px;top:73px;width:200000px">
    <v:group atv:dynamic="true" atv:origx="23000" atv:origy="19000" atv:refpx="210" atv:refpy="235" coordsize="8150,3150" id="ok_button" style="height:3150px;left:0;top:0;width:8150px">
     <v:shapetype id="2linear_12">
      <v:fill angle="180" colors="0 #ffffff, 1 #ffffff, 1 #ffffff" method="none" rotate="true" type="gradient"/>
     </v:shapetype>
     <v:shapetype id="2linear_0">
      <v:fill angle="0" colors="0 #ffffff, 0.0437 #ffffff, 0.9104 #ffffff, 1 #ffffff" method="none" rotate="true" type="gradient"/>
     </v:shapetype>
     <v:shapetype id="2linear_1">
      <v:fill angle="180" colors="0 #ffffff, 0.5433 #ffffff, 1 #ffffff, 1 #ffffff" method="none" rotate="true" type="gradient"/>
     </v:shapetype>
     <v:shapetype id="2linear_2">
      <v:fill angle="0" colors="0 #ffffff, 0.5617 #ffffff, 1 #ffffff" method="none" rotate="true" type="gradient"/>
     </v:shapetype>
     <v:group atv:dynamic="true" atv:origtransform="matrix(1,0,0,1,0.75,0.75)" atv:refpx="27075" atv:refpy="20575" coordorigin="-72925,73" coordsize="200000,46603" id="ok_button_button_clickarea" style="height:46603px;left:-72925px;top:73px;width:200000px">
      <v:polyline atv:matrix="1,0,0,1,230.75,190.75" fillcolor="#a5fb53" id="id_11" points="53975,25275 63175,21275 48975,38375 52075,31175 38275,40375 55875,44875 44075,23875 47875,42375 56475,32575 42975,24475 23975,41975 47875,31875 25275,35875 53975,25275 " strokecolor="#0b265c" stroked="true" strokeweight="2.25"/>
      <v:roundrect arcsize="0.136" atv:bindbr="1,1" atv:bindtl="0,0" atv:dynamic="true" atv:refpx="27100" atv:refpy="20675" filled="false" id="ok_button_id_0" strokecolor="#647A8F" stroked="true" strokeweight="0.75" style="height:2950px;left:23100px;top:19100px;width:7950px"/>
      <v:oval fillcolor="#753dbc" id="id_7" strokecolor="#1f7fd4" stroked="true" strokeweight="2.25" style="height:8600px;left:18175px;top:25275px;width:12800px"/>
      <v:rect fillcolor="#97bfcd" id="id_2" strokecolor="#3a7d3c" stroked="true" strokeweight="2.25" style="height:4400px;left:47275px;top:42275px;width:5900px"/>
      <v:roundrect arcsize="0.108" atv:bindbr="1,1" atv:bindtl="0,0" atv:refpx="27350" atv:refpy="9675" filled="false" id="ok_button_id_2" stroked="false" strokeweight="0.38" style="height:2450px;left:23350px;top:19350px;width:7450px"/>
      <v:roundrect arcsize="0.113" atv:bindbr="1,1" atv:bindtl="0,0" atv:refpx="27475" atv:refpy="22175" filled="false" id="ok_button_button_bg" stroked="false" strokeweight="0.38" style="height:2200px;left:23475px;top:19475px;width:7200px"/>
      <v:polyline atv:matrix="1,0,0,1,230.75,190.75" fillcolor="#713224" id="id_33" points="35775,30675 63175,26575 64175,30875 64575,36675 28875,42275 47575,25775 26475,42475 32675,25575 35875,24275 57775,44575 59575,44475 51175,23675 58875,20875 44075,32875 " strokecolor="#af1fe6" stroked="true" strokeweight="0.75">
       <v:stroke joinstyle="miter"/>
      </v:polyline>
      <v:group coordorigin="131,73" coordsize="30069,23328" style="height:23328px;left:131px;top:73px;width:30069px">
       <v:group atv:bindbr="0.5,0.5" atv:bindtl="0.5,0.5" atv:origx="3000" atv:origy="500" atv:refpx="130" atv:refpy="20" coordsize="2000,2000" id="ok_button_button_symbol" style="height:2000px;left:0;top:0;visibility:hidden;width:2000px">
        <v:shapetype id="3linearGradient2250">
         <v:fill angle="270" colors="0 #008700, 1 #006f00" method="none" rotate="true" type="gradient"/>
        </v:shapetype>
        <v:polyline atv:matrix="1,0,0,1,260.75,195.75" atv:refpx="27075" atv:refpy="20575" fillcolor="#647A8F" id="ok_button_button_symbol_id_3" points="26341,20588 26206,20728 26852,21502 27944,19740 27809,19648 26798,20898 26341,20588 " stroked="false" strokeweight="0.75"/>
        <v:line fillcolor="#3f82a7" from="37575,36875" id="id_22" strokecolor="#fd169e" stroked="true" strokeweight="2.25" to="56275,42975">
         <v:stroke joinstyle="miter"/>
        </v:line>
       </v:group>
      </v:group>
      <v:line fillcolor="#2548aa" from="49075,36075" id="id_9" strokecolor="#8f5418" stroked="true" strokeweight="2.25" to="27775,26875">
       <v:stroke joinstyle="miter"/>
      </v:line>
      <v:line atv:bindbr="0.5,0.5" atv:bindtl="0.5,0.5" atv:refpx="4000" atv:refpy="1450" from="-72925 20625" id="ok_button_button_label" style="visibility:inherit" to="127075 20725">
       <v:path textpathok="true"/>
       <v:fill color="#647A8F" on="true"/>
       <v:stroke on="false"/>
       <v:textpath on="true" string="OK" style="font-family:'Varela Round';font-size:12px;v-text-align:center"/>
      </v:line>
      <v:rect fillcolor="#75ec67" id="id_1" strokecolor="#802e35" stroked="true" strokeweight="3" style="height:17500px;left:52975px;top:19775px;width:8400px"/>
      <v:roundrect arcsize="0.159" atv:bindbr="1,1" atv:bindtl="0,0" atv:refpx="27475" atv:refpy="22175" filled="false" id="ok_button_button_stroke" stroked="false" strokeweight="0.75" style="height:2200px;left:23475px;top:19475px;width:7200px"/>
      <v:line fillcolor="#1ef527" from="41575,28675" id="id_5" strokecolor="#e2a79d" stroked="true" strokeweight="2.25" to="38575,35075">
       <v:stroke joinstyle="miter"/>
      </v:line>
     </v:group>
    </v:group>
   </v:group>
   <v:line fillcolor="#ae847e" from="17100,1100" id="id_24" strokecolor="#09cfa2" stroked="true" strokeweight="3.75" to="8100,1700">
    <v:stroke joinstyle="miter"/>
   </v:line>
   <v:polyline fillcolor="#edc74a" id="id_23" points="5800,25000 10400,18700 42700,16300 38400,13300 8900,11800 42700,5700 42000,16600 3300,20700 35600,23900 24200,22500 36700,16000 26200,6100 5800,25000 " strokecolor="#8ddff1" stroked="true" strokeweight="0.75"/>
   <v:group coordorigin="-62925,73" coordsize="200000,54103" style="height:54103px;left:-62925px;top:73px;width:200000px">
    <v:group atv:dynamic="true" atv:origx="33000" atv:origy="19000" atv:refpx="310" atv:refpy="235" coordsize="8150,3150" id="cancel_button" style="height:3150px;left:0;top:0;width:8150px">
     <v:group atv:dynamic="true" atv:origtransform="matrix(1,0,0,1,0.75,0.75)" atv:refpx="37075" atv:refpy="20575" coordorigin="-62925,73" coordsize="200000,54103" id="cancel_button_button_clickarea" style="height:54103px;left:-62925px;top:73px;width:200000px">
      <v:roundrect arcsize="0.136" atv:bindbr="1,1" atv:bindtl="0,0" atv:dynamic="true" atv:refpx="37100" atv:refpy="20675" filled="false" id="cancel_button_id_0" strokecolor="#647A8F" stroked="true" strokeweight="0.75" style="height:2950px;left:33100px;top:19100px;width:7950px"/>
      <v:polyline atv:matrix="1,0,0,1,330.75,190.75" fillcolor="#1bfb8f" id="id_30" points="36375,38775 69575,23275 47975,33875 38575,40075 57975,42675 57075,34875 38575,33675 47375,19175 75475,25575 59875,25575 58575,23075 36375,38775 " strokecolor="#2c7414" stroked="true" strokeweight="2.25"/>
      <v:roundrect arcsize="0.108" atv:bindbr="1,1" atv:bindtl="0,0" atv:refpx="37350" atv:refpy="9675" filled="false" id="cancel_button_id_2" stroked="false" strokeweight="0.38" style="height:2450px;left:33350px;top:19350px;width:7450px"/>
      <v:polyline atv:matrix="1,0,0,1,330.75,190.75" fillcolor="#f7d153" id="id_26" points="41575,26575 63975,19475 41075,28175 42475,24975 64475,33975 44775,37875 55275,36475 75375,31575 51475,32775 56575,25775 57675,43775 " strokecolor="#98c0aa" stroked="true" strokeweight="3.75">
       <v:stroke joinstyle="miter"/>
      </v:polyline>
      <v:rect fillcolor="#a99146" id="id_14" strokecolor="#5d6840" stroked="true" strokeweight="1.5" style="height:2000px;left:45275px;top:37675px;width:5000px"/>
      <v:roundrect arcsize="0.113" atv:bindbr="1,1" atv:bindtl="0,0" atv:refpx="37475" atv:refpy="22175" filled="false" id="cancel_button_button_bg" stroked="false" strokeweight="0.38" style="height:2200px;left:33475px;top:19475px;width:7200px"/>
      <v:oval fillcolor="#2c4f1b" id="id_21" strokecolor="#56f265" stroked="true" strokeweight="1.5" style="height:28400px;left:30175px;top:25775px;width:28400px"/>
      <v:group coordorigin="131,73" coordsize="17569,2428" style="height:2428px;left:131px;top:73px;width:17569px">
       <v:group atv:bindbr="0.5,0.5" atv:bindtl="0.5,0.5" atv:origx="3000" atv:origy="500" atv:refpx="130" atv:refpy="20" coordsize="2000,2000" id="cancel_button_button_symbol" style="height:2000px;left:0;top:0;visibility:hidden;width:2000px">
        <v:polyline atv:matrix="1,0,0,1,360.75,195.75" atv:refpx="37075" atv:refpy="20575" fillcolor="#647A8F" id="cancel_button_button_symbol_id_3" points="36341,20588 36206,20728 36852,21502 37944,19740 37809,19648 36798,20898 36341,20588 " stroked="false" strokeweight="0.75"/>
        <v:line fillcolor="#dec90d" from="38275,21675" id="id_18" strokecolor="#4724e9" stroked="true" strokeweight="3.75" to="53775,22075">
         <v:stroke joinstyle="miter"/>
        </v:line>
       </v:group>
      </v:group>
      <v:line atv:bindbr="0.5,0.5" atv:bindtl="0.5,0.5" atv:refpx="4000" atv:refpy="1450" from="-62925 20625" id="cancel_button_button_label" style="visibility:inherit" to="137075 20725">
       <v:path textpathok="true"/>
       <v:fill color="#647A8F" on="true"/>
       <v:stroke on="false"/>
       <v:textpath on="true" string="Abbrechen" style="font-family:'Varela Round';font-size:12px;v-text-align:center"/>
      </v:line>
      <v:roundrect arcsize="0.159" atv:bindbr="1,1" atv:bindtl="0,0" atv:refpx="37475" atv:refpy="22175" filled="false" id="cancel_button_button_stroke" stroked="false" strokeweight="0.75" style="height:2200px;left:33475px;top:19475px;width:7200px"/>
      <v:line fillcolor="#2df8ca" from="47175,29675" id="id_28" strokecolor="#251af6" stroked="true" strokeweight="0.75" to="48875,31475">
       <v:stroke joinstyle="miter"/>
      </v:line>
     </v:group>
    </v:group>
   </v:group>
   <v:line atv:refpx="22900" atv:refpy="3750" from="11400 3733" id="status_message" to="211400 3833">
    <v:path textpathok="true"/>
    <v:fill color="#647a8f" on="true"/>
    <v:stroke on="false"/>
    <v:textpath on="true" string="Bitte geben Sie Benutzernamen und Passwort ein." style="font-family:'Varela Round';font-size:14px;font-weight:bold;v-text-align:left"/>
   </v:line>
   <v:polyline fillcolor="#11f4b4" id="id_6" points="16300,18500 20700,24700 3600,21400 36400,27400 15300,9700 5300,21200 32400,17200 11200,26200 8600,17200 21300,10900 41000,13300 24200,25500 16300,18500 " strokecolor="#1293d5" stroked="true" strokeweight="3"/>
   <v:group coordorigin="2302,801" coordsize="35098,26999" style="height:26999px;left:2302px;top:801px;width:35098px">
    <v:group atv:origx="2000" atv:origy="500" atv:refpx="59" atv:refpy="35" coordsize="6000,6000" id="status_symbol" style="height:6000px;left:0;top:0;visibility:hidden;width:6000px">
     <v:polyline atv:matrix="1,0,0,1,20,5" fillcolor="#7e3e90" id="id_12" points="30300,20400 18800,28300 39400,5100 27200,3800 12200,8300 11400,12600 30000,6000 8600,26200 10800,11800 4500,16900 " strokecolor="#bf40ca" stroked="true" strokeweight="3.75">
      <v:stroke joinstyle="miter"/>
     </v:polyline>
     <v:group atv:origtransform="matrix(1.2067,0,0,1.2067,-21.1174,-238.3251)" atv:refpx="5000" atv:refpy="3500" coordorigin="2302,801" coordsize="5397,23067" id="status_symbol_status_symbol" style="height:23067px;left:2302px;top:801px;width:5397px">
      <v:oval atv:refpx="5000" atv:refpy="27634" filled="false" id="status_symbol_id_2" strokecolor="#647A8F" stroked="true" strokeweight="4.53" style="height:5397px;left:2302px;top:801px;width:5397px"/>
      <v:line atv:refpx="5000" atv:refpy="28363" from="3031,1530" id="status_symbol_id_3" strokecolor="#647A8F" stroked="true" strokeweight="4.53" to="6969,5469">
       <v:stroke joinstyle="miter"/>
      </v:line>
     </v:group>
    </v:group>
   </v:group>
  </v:group>
  <div id="foreignObjects">
   <div atv:origtransform="matrix(1.4375,0,0,1.3333,170.0002,76.9981)" id="username_input_clickareaFO" style="height:40px;left:170px;position:absolute;top:77px;width:230px">    <div style="width:100%;height:100%;opacity:0;filter:alpha(opacity=0);background-color:red" id="username_input_div_clickarea"></div>
   </div>
   <div atv:origtransform="matrix(1.4375,0,0,1.3333,170.0002,136.9966)" id="password_input_clickareaFO" style="height:40px;left:170px;position:absolute;top:137px;width:230px">    <div style="width:100%;height:100%;opacity:0;filter:alpha(opacity=0);background-color:red" id="password_input_div_clickarea"></div>
   </div>
  </div>
  <script type="text/javascript" src="../../webmi.js"></script>
  <script type="text/javascript">//<![CDATA[
webMI.proxy({"":[function(webMI,window,document,self){var trigger_username = "com.atvise.login.username";
var trigger_password = "com.atvise.login.password";
var username = "";
var password = "";

webMI.addOnload(function(e) {
	webMI.trigger.fire("setValue", "", "username_input");
	webMI.trigger.fire("setValue", "", "password_input");
});

webMI.trigger.connect("valuechanged", function(e) {
	username = e.value;
}, "username_input");

webMI.trigger.connect("valuechanged", function(e) {
	password = e.value;
}, "password_input");

webMI.trigger.connect(trigger_password, function(e) {
	password = e.value;
	webMI.trigger.fire("setValue", e.value, "password_input");
});

webMI.trigger.connect(trigger_username, function(e) {
	username = e.value;
	webMI.trigger.fire("setValue", e.value, "username_input");
});

webMI.trigger.connect("clicked", function(e) {
	webMI.display.closeWindow();
}, "cancel_button");

webMI.trigger.connect("clicked", function(e) {
	webMI.data.login(username, password, function(e) {
		if (e[""].hasOwnProperty("username") && e[""].username){
			webMI.display.closeWindow();
		} else if (e[""].hasOwnProperty("username")) {
			webMI.gfx.setText("status_message", "Login fehlgeschlagen! Benutzername/Passwort falsch!");
			webMI.gfx.setVisible("status_symbol", null);
		} else if (e[""].hasOwnProperty("error")) {
			webMI.gfx.setText("status_message", "Login fehlgeschlagen! Benutzername/Passwort falsch!");
			webMI.gfx.setVisible("status_symbol", null);
		} else {
			webMI.display.closeWindow();
		}
	});
}, "ok_button");

webMI.trigger.connect("clicked", function(e) {
	webMI.query.trigger = trigger_username;
	webMI.query.password = "No";
	webMI.query.value = "";
	webMI.display.openWindow({display:"00000012",extern:false,height:250,menubar:false,modal:true,movable:true,resizable:false,scrollbars:false,status:false,title:"Tastatur",toolbar:false,width:550,query:webMI.query});
}, "username_keyboard");

webMI.trigger.connect("clicked", function(e) {
	webMI.query.trigger = trigger_password;
	webMI.query.password = "Yes";
	webMI.query.value = "";
	webMI.display.openWindow({display:"00000012",extern:false,height:250,menubar:false,modal:true,movable:true,resizable:false,scrollbars:false,status:false,title:"Tastatur",toolbar:false,width:550,query:webMI.query});
}, "password_keyboard");webMI.callExtension("SYSTEM.LIBRARY.PROJECT.QUICKDYNAMICS.Theme", {"action":"font family", "defaultValue":"font family", "id":"status_message", "key":"FontFamily", "property":""});
},{"cancel_button":["2",{"label":{v:"Abbrechen"},"tabIndex":{v:"6"}}],"ok_button":["2",{"label":{v:"OK"},"tabIndex":{v:"5"}}],"password_input":["1",{"allowDirectInput":{v:"Yes"},"password":{v:"Yes"},"tabIndex":{v:"3"},"validation":{v:"String"}}],"status_symbol":["4",{}],"username_input":["1",{"allowDirectInput":{v:"Yes"},"tabIndex":{v:"1"},"validation":{v:"String"}}]},{}],"2":[function(webMI,window,document,self){var strokeNormal = "none";
var strokePressed = webMI.query["strokePressed"];
var focusStrokeColor = webMI.query["focusStrokeColor"];
var fillColor = webMI.query["fillColor"];
var fillColorInactive = webMI.query["fillColorInactive"];
var display = webMI.query["display"];
var consistencyGroup = webMI.query["consistencyGroup"];
var consistencyFunction = webMI.query["consistencyFunction"];

if (consistencyGroup)
	var consistencyHandler = webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Consistency Handler");

var tabHandler = webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Tab Handler");
var tabIndex = (webMI.query["tabIndex"] == undefined) ? "" : webMI.query["tabIndex"];
var tooltip = (webMI.query["tooltip"] == undefined) ? "" : webMI.query["tooltip"];

var right = (webMI.query["right"] == undefined) ? "" : webMI.query["right"];
if (right.search(/SYSTEM\.SECURITY\.RIGHTS\./) != -1) {
	right = right.substring(23,right.length); //remove "prefix" SYSTEM.SECURITY.RIGHTS.
}

var active = false;
var hasRight = false;

if (right != "") {
	webMI.addEvent(webMI.data, "clientvariableschange", function(e) {
		hasRight=false;
		if (("username" in e) && (e.username != "")) {
				hasRight = webMI.hasRight(right);
		}
		deActivate();
	});
}

var activeValue = (webMI.query["activeValue"] == undefined) ? "" :webMI.query["activeValue"];
var activeNode = (webMI.query["activeNode"] == undefined) ? "" : webMI.query["activeNode"];
var nodeIsActive = false;

if ((activeNode != "") && (String(activeValue) != "")) {
	webMI.data.subscribe(activeNode, function(e) {
		var nodeActiveValue = e.value;
		if (typeof nodeActiveValue == "boolean") {
			nodeIsActive = (String(nodeActiveValue) == activeValue);
		} else if (typeof nodeActiveValue == "number") {
			try {
				var temp = parseFloat(activeValue);
				nodeIsActive = (nodeActiveValue == temp);
			} catch(e) {
				nodeIsActive = false;
			}
		} else {
			nodeIsActive = (nodeActiveValue == activeValue);
		}
		deActivate();
	});
} else {
	deActivate();
}

function deActivate(forceDeActivate) {
	if (typeof forceDeActivate !== "undefined" && forceDeActivate){
		active = false;
	} else if (right != "") {
		if ((String(activeValue) != "") && (activeNode != "")) {
			active=(nodeIsActive && hasRight);
		} else {
			active=hasRight;
		}
	} else {
		if ((String(activeValue) != "") && (activeNode != "")) {
			active=nodeIsActive;
		} else {
			active=true;
		}
	}
	if (active) {
		webMI.gfx.setFill("button_bg", fillColor);
		webMI.gfx.setVisible("button_stroke", null);
	} else {
		webMI.gfx.setFill("button_bg", fillColorInactive);
		webMI.gfx.setVisible("button_stroke", false);
	}
}

function release() {
	if (active) {
		webMI.gfx.setFill("button_stroke", "url(#linear_1)");
		webMI.gfx.setStroke("button_stroke", strokeNormal);
	}
}

function focusTH(){
	if (active) {
		webMI.gfx.setStroke("button_stroke", focusStrokeColor);
	}
}
function applyTH(){
	if (active){
		webMI.trigger.fire("clicked", true, "");
	}
	if (consistencyGroup)
		consistencyFunction == "write" ? consistencyHandler.write(consistencyGroup) : consistencyHandler.read(consistencyGroup);
}
function backTH(){}
function arrowTH(dir){}
function keyHandler(keyTH,param2){
	if (keyTH == "focus"){
		focusTH();
	} else if (keyTH == "blur"){
		release();
	} else if (keyTH == "apply"){
		webMI.gfx.setFill("button_stroke", "url(#linear_2)");
		applyTH();
	} else if (keyTH == "releaseClick"){
		webMI.gfx.setFill("button_stroke", "url(#linear_1)");
	} else if (keyTH == "back"){
		backTH();
	} else if (keyTH == "arrow"){
		arrowTH(param2);
	} else if (keyTH == "isActive"){
		return active && param2(document.getElementById("button_clickarea").parentNode);
	}
}

webMI.addEvent("button_clickarea", "mousedown", function(e) {
	var id = "button_clickarea";
	var value = true;
	return function(value) {
		if (active) {
			webMI.gfx.setFill("button_stroke", "url(#linear_2)");
			webMI.gfx.setStroke("button_stroke", strokePressed);
		}
	} (value);
});

webMI.addEvent("button_clickarea", "mouseup", function(e) {
	var id = "button_clickarea";
	var value = true;
	return function(value) {
		release();
	} (value);
});

webMI.addEvent("button_clickarea", "mouseout", function(e) {
	var id = "button_clickarea";
	var value = true;
	return function(value) {
		release();
	} (value);
});

webMI.addEvent("button_clickarea", "click", function(e) {
	if (active){
		tabHandler.setCurrentIndex(keyHandler, function(){
			webMI.trigger.fire("clicked", true, "")
		});
		//webMI.trigger.fire("clicked", true, "");
	}
	if (consistencyGroup)
		consistencyFunction == "write" ? consistencyHandler.write(consistencyGroup) : consistencyHandler.read(consistencyGroup);
});

webMI.addEvent("button_clickarea", "dragstart", function(e) {
	if (e.preventDefault) {
		e.preventDefault();
	}
});
webMI.addOnload(function() {
	var doc = document.getElementById("button_clickarea").ownerDocument;
	tabHandler.register(tabIndex,keyHandler,doc);
});

webMI.trigger.connect("com.atvise.setActive",function(e){
	if (e.value){
		deActivate();
	}  else {
		deActivate(true);
	}
});

if (tooltip != ""){
	webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Tooltip", {"auto":"true", "id":"button_clickarea", "text":tooltip});
}
},{"button_symbol":["3",{"symbolColor":{b:"symbolColor"}}]},{"consistencyFunction":"write","fillColor":"#FFFFFF","fillColorInactive":"#FFFFFF","focusStrokeColor":"#FFFFFF","fontColor":"#d0d0d0","fontFamily":"Arial","fontSize":"12","label":"Standard","strokePressed":"#ffffff","symbol":"00000010","symbolColor":"#647A8F","visibilityLabel":"inherit","visibilitySymbol":"hidden"}],"1":[function(webMI,window,document,self){var inputMode = webMI.query["validation"]; //implement if hasFeature html5 input types
var inputFO = webMI.dom.createElement("http://www.w3.org/1999/xhtml", "input");
var isPasswordMode = (inputMode == "Password" || webMI.query["password"] == "Yes");
inputFO.type = isPasswordMode ? "password" : "text"; //implement e-mail when browsers support it
inputFO.id = "html_input";
inputFO.style.width = "100%";
inputFO.style.height = "100%";
inputFO.style.borderWidth = "0px";
inputFO.style.padding = "0px";
inputFO.style.textAlign = "right";
inputFO.style.color = webMI.query["fontColor"];
inputFO.style.fontFamily = webMI.query["fontFamily"];
inputFO.style.fontSize = parseFloat(webMI.query["fontSize"])*0.0820625+"em";
var foreignObject = null;
var createdForeignObject = false;
var data = {};
var security = {};
var initialized = false;
var value = null;
var nodeToSubscribe = (webMI.query["outputNode"] != "") ? webMI.query["outputNode"] : webMI.query["base"];
var decimalFraction = parseInt(webMI.query["decimalFraction"], 10);
var tabHandler = webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Tab Handler");
var consistencyHandler = webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Consistency Handler");
var consistencyGroup = webMI.query["consistencyGroup"];
var preventFirstConsistencyRead = true;
var storedEvent = {"keyCode": null, "shiftKey": false};
var backgroundColor = webMI.query["fill"];

webMI.addOnload(function(e) {
	var remaining = 8;
	data = {
		"min":			{"value":null, "address": webMI.query["nodeMin"], "paramValue": webMI.query["min"]},
		"max":			{"value":null, "address": webMI.query["nodeMax"], "paramValue": webMI.query["max"]},
		"limitLowLow":	{"value":null, "address": webMI.query["nodeLowLow"], "paramValue": webMI.query["limitLowLow"]},
		"limitLow":		{"value":null, "address": webMI.query["nodeLow"], "paramValue": webMI.query["limitLow"]},
		"limitHigh":	{"value":null, "address": webMI.query["nodeHigh"], "paramValue": webMI.query["limitHigh"]},
		"limitHighHigh":{"value":null, "address": webMI.query["nodeHighHigh"], "paramValue": webMI.query["limitHighHigh"]},
		"activeNode":	{"value":null, "address": webMI.query["activeNode"], "paramValue": ""},
		"activeValue":	{"value":null, "address": "", "paramValue": webMI.query["activeValue"]},
		"base":			{"value":null, "address": webMI.query["base"], "paramValue": ""}
	};

	function initVariables(value, address, id) {
		if(id == "base" && consistencyGroup != "" && address != "") {
			webMI.data.read(address, function(e) {
				data[id]["value"] = e.value;
			});
			consistencyHandler.register(consistencyGroup, address, handleInput);
			reduceRemaining();
		} else if (address != "") {
			webMI.data.subscribe(address, function(e) {
				data[id]["value"] = e.value;
				reduceRemaining();
			});
		} else if (!isNaN(parseFloat(value))) {
			data[id]["value"] = parseFloat(value);
			reduceRemaining();
		} else if (typeof value == "string" && value != "off") {
			data[id]["value"] = value;
			reduceRemaining();
		} else
			reduceRemaining();

		function reduceRemaining() {
			if(!initialized)
				initialized = (--remaining == 0);
			else
				handleInput();
		}
	}

	for(var i in data)
		initVariables(data[i]["paramValue"], data[i]["address"], i);

	var doc = document.getElementById("svg_input").ownerDocument;
	tabHandler.register(webMI.query["tabIndex"],keyHandler,doc);

	if (webMI.query["tooltip"] != undefined)
		webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Tooltip", {"auto":"true", "id":"clickareaFO", "text":webMI.query["tooltip"]});
});

function setColorization() {
	function setBackground(color) {
		webMI.gfx.setFill("input_bg", color);
		inputFO.style.backgroundColor = color;
	}

	if(data["limitLowLow"]["value"] != null && value <= data["limitLowLow"]["value"])
		setBackground(webMI.query["limitLowLowFill"]);
	else if(data["limitLow"]["value"] != null && value <= data["limitLow"]["value"])
		setBackground(webMI.query["limitLowFill"]);
	else if(data["limitHighHigh"]["value"] != null && value >= data["limitHighHigh"]["value"])
		setBackground(webMI.query["limitHighHighFill"]);
	else if(data["limitHigh"]["value"] != null && value >= data["limitHigh"]["value"])
		setBackground(webMI.query["limitHighFill"]);
	else if(!security["hasRight"] || !security["activateInput"] || !security["activated"])
		setBackground(webMI.query["fillColorInactive"]);
	else if(security["outputModeOnly"])
		setBackground(webMI.query["fillNotEditable"]);
	else
		setBackground(webMI.query["fill"]);
}

function handleInput(consistencyValue){
	//preventing first ConsistencyRead, as it would call handleInput without a consistencyValue
	if(consistencyGroup != "" && preventFirstConsistencyRead) {
		preventFirstConsistencyRead = false;
		return;
	}

	if(consistencyValue && consistencyGroup != "")
		consistencyHandler.set(consistencyGroup, data["base"]["address"], consistencyValue); //does not support alternative node

	value = (consistencyValue == undefined) ? data["base"]["value"] : consistencyValue;

	webMI.trigger.fire("valuechanged", (value == null) ? "" : value, "");

	var formattedOutput = null;
	var enumList = webMI.query["enumList"];

	if (isPasswordMode)
		formattedOutput = "*** Passwort ***";
	else if(enumList != "") {
		formattedOutput = (enumList[value] != undefined) ? enumList[value].value : value + " not in enum list";
		value = (enumList[value] != undefined) ? enumList[value].value : value;
	} else if(inputMode == "Number") {
		var leadingZeros = parseInt(webMI.query["leadingZeros"], 10);
		var postDecimal = parseInt(webMI.query["postDecimal"], 10);
		var sign = webMI.query["sign"] == "true";
		var unit = webMI.query["unit"];
		var fieldWidth = 0;
		formattedOutput = (value != null) ? value : "";

		if(!isNaN(decimalFraction) && decimalFraction > 0)
			formattedOutput = formattedOutput / Math.pow(10, decimalFraction);

		if(!isNaN(leadingZeros) && leadingZeros > 0)
			fieldWidth += leadingZeros;

		if(!isNaN(postDecimal) && postDecimal > 0) {
			if(postDecimal > 9)
				postDecimal = 9;
			fieldWidth += (postDecimal + 1);
		}

		if(!isNaN(leadingZeros) && !isNaN(postDecimal)) {
			var formatString = ((sign) ? "%+" : "%") + "0" + fieldWidth + "." + postDecimal + "f";
			formattedOutput = webMI.sprintf(formatString, formattedOutput);
		}

		value = formattedOutput;

		if(unit != undefined)
			formattedOutput = formattedOutput + " " + unit;
	}

	webMI.gfx.setText("input_label", (formattedOutput != null) ? formattedOutput : value);

	security = {
		"outputModeOnly": (webMI.query["editable"] == "No"),
		"activateInput": (data["activeValue"]["value"] == null || data["activeNode"]["value"] == null) || data["activeValue"]["value"] == String(data["activeNode"]["value"]),
		"hasRight": true,
		"activated": (typeof security["activated"] === "boolean") ? security["activated"] : true
	};

	var requiredRight = webMI.query["right"];

	if (requiredRight != "") {
		if (requiredRight.search(/SYSTEM\.SECURITY\.RIGHTS\./) != -1)
			requiredRight = requiredRight.substring(23,requiredRight.length); //remove "prefix" SYSTEM.SECURITY.RIGHTS.

		webMI.addEvent(webMI.data, "clientvariableschange", function(e) {
			security["hasRight"] = webMI.hasRight(requiredRight);
			if(!security["hasRight"])
				switchToOutputMode();
			setColorization();
		});
	}

	if(!security["activateInput"])
		switchToOutputMode();

	//workaround until apple Bug ID 12900899 has been solved and the foreignobject clickarea is no longer required
	if(security["outputModeOnly"])
		webMI.gfx.setVisible("clickareaFO", false);

	if(inputMode == "Number")
		value = parseFloat(value);

	setColorization();
}

function switchToOutputMode() {
	webMI.gfx.setVisible("svg_input", null);
	webMI.gfx.setVisible(foreignObject, false);
}

function switchToInputMode(){
	if(security["hasRight"] && !security["outputModeOnly"] && security["activateInput"] && security["activated"]) {

		var directKeyboardMode = webMI.query["allowDirectInput"] == "Yes";
		var useSVGKeyboard = webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Configuration", {"action":"existsIndexParameter", "parameterName":"useSVGKeyboard"});
		if(useSVGKeyboard == "true")
			directKeyboardMode = false;

		function setFocus() {
			inputFO.focus();
			if(webMI.query["selectTextOnFocus"] == "true")
				inputFO.select();
		}

		if(directKeyboardMode) {
			tabHandler.setAcceptKeys(false);
			inputFO.value = value;
			webMI.gfx.setVisible("svg_input", false);
			if(!createdForeignObject) {
				var textboxGroup = document.getElementById("input_element");
				foreignObject = webMI.gfx.addForeignObject({x:0, y:0, width:160, height:30, id:"input_fo", childNodes: [inputFO]}, textboxGroup);
				foreignObject.style.border = "black 2px solid";
				createdForeignObject = true;
				setFocus();
			 } else {
				webMI.gfx.setVisible(foreignObject, null);
				setFocus();
			}
		} else { //SVG Mode
			function getDisplayParameters(){
				var communicationID = new Date().getTime().toString();
				webMI.trigger.connect(communicationID, function(e) {
					checkInput(e.value);
				});

				var passObj = {};
				for (var i in webMI.query)
					passObj[i] = webMI.query[i];
				passObj["minValue"] = data["min"]["value"];
				passObj["maxValue"] = data["max"]["value"];
				if (nodeToSubscribe != "" && consistencyGroup == "")
					passObj["target"] = nodeToSubscribe;
				if (nodeToSubscribe == "" || consistencyGroup != "")
					passObj["trigger"] = communicationID;
				if (isPasswordMode)
					passObj["password"] = "Yes";
				return passObj;
			}

			var keyboard = null;
			var size = (inputMode != undefined && inputMode == "Number") ? {w: 438, h: 378} : {w: 550, h: 250};

			if (inputMode != undefined && inputMode == "Number")
				keyboard = "00000011";
			else
				keyboard = "00000012";

			var keyboardParam = getDisplayParameters();
			webMI.display.openWindow({display:keyboard,extern:false,height:size.h,menubar:false,modal:true,movable:true,resizable:false,scrollbars:false,status:false,title:"Tastatur",toolbar:false,width:size.w,query:keyboardParam});
		}
	}
}

function keyHandler(keyTH,param2){
	if (keyTH == "focus")
		webMI.gfx.setStroke("input_bg", webMI.query["focusStrokeColor"]);
	else if (keyTH == "blur")
		webMI.gfx.setStroke("input_bg", "none");
	else if (keyTH == "apply")
		switchToInputMode();
	else if (keyTH == "isActive")
		return (security["hasRight"] && !security["outputModeOnly"] && security["activateInput"] && security["activated"] && param2(document.getElementById("svg_input").parentNode));
}

webMI.addEvent("clickareaFO", "click", function(e) {
	tabHandler.setCurrentIndex(keyHandler);
	switchToInputMode();
});

function stopPropagation(event) {
	/*
	 * If the ALT key is pressed together with one or more other keys on
	 * Firefox (only Windows), there will be no keyup event when the ALT
	 * key gets released. Since the ALT key is being used for paning in
	 * atvise visualization, we have to make sure that key listeners in the
	 * global document do not get triggered if someone is currently entering
	 * something in the inputFO (like "someone@example.com").
	**/
	if (event.altKey){
		if (event.stopPropagation)
			event.stopPropagation();
		else
			event.cancelBubble = true;
	}
}

webMI.addEvent(inputFO, "keyup", stopPropagation);
webMI.addEvent(inputFO, "keydown", function(e) {
	var keyCode = e.keyCode;
	if (/MSIE/.test(navigator.userAgent)){
		storedEvent["keyCode"] = e.keyCode;
		storedEvent["shiftKey"] = e.shiftKey;
	}
	if(keyCode == "13" || keyCode == "9") {
		inputFO.blur();
		if (keyCode == "13") tabHandler.setAcceptKeysPrevent(true);
	} else if(keyCode == "27"){
		storedEvent["keyCode"] = "27";
		tabHandler.setAcceptKeysPrevent(true);
		inputFO.blur();
	}

	stopPropagation(e);
});

inputFO.onblur = function() {
	switchToOutputMode();
	tabHandler.setAcceptKeys(true);

	if (storedEvent["keyCode"] != null){
		if (storedEvent["shiftKey"] && storedEvent["keyCode"] == "9")
			tabHandler.prevTab();
		else if (storedEvent["keyCode"] == "9")
			tabHandler.nextTab();
	}

	if (storedEvent["keyCode"] != "27"){
		//workaround: setTimeout for Chrome crash error (clicking out from the input field or clicking enter while holding a button pressed).
		setTimeout(function(){
			checkInput(inputFO.value);
		},0);
	}

	storedEvent["keyCode"] = null;
};

function checkInput(tempValue) {
	var tempValue = String(tempValue);
	var regexps = { "Boolean":"(true|false|0|1)", "Number":"[+-]*[0-9]+(\.[0-9]+)?", "String":".*", "Password":".*" };
	if(new RegExp("^"+regexps[inputMode]+"$", "i").test(tempValue)) {
		if(inputMode == "Boolean")
			tempValue = (tempValue.toLowerCase() == "true" || tempValue == "1") ? true : false;
		else if(inputMode == "Number")
			tempValue = tempValue = parseFloat(tempValue.replace(",","."));
	} else {
		console.warn("Please enter a valid format according to the selected input mode.");
		return;
	}

	if(inputMode == "Number") {
		if(data["min"]["value"] != null && tempValue < data["min"]["value"]) {
			alert("Wert zu niedrig");
			return;
		} else if(data["max"]["value"] != null && tempValue > data["max"]["value"]) {
			alert("Wert zu hoch");
			return;
		}

		if(!isNaN(decimalFraction) && decimalFraction > 0)
			tempValue = tempValue * Math.pow(10, decimalFraction);

		writeValue(tempValue);
	} else if(inputMode == "String" || inputMode == "Boolean" || inputMode == "Password")
		writeValue(tempValue);

	function writeValue(tempValue) {
		if(consistencyGroup == "" && nodeToSubscribe != ""){
			webMI.data.write(nodeToSubscribe, tempValue);
			webMI.trigger.fire("com.atvise.outputvaluechanged", tempValue, "");
		} else
			handleInput(tempValue);

	}
}

webMI.trigger.connect("setValue", function(e) {
	checkInput(e.value);
});

webMI.trigger.connect("com.atvise.setActive",function(e){
	security["activated"] = e.value;

	setColorization();
	switchToOutputMode();
});

webMI.trigger.connect("com.atvise.setBlinking", function(e){
	if (e.value == "none"){
		webMI.gfx.setStroke("blinking_frame", e.value);
		webMI.gfx.setVisible("blinking_frame", null);
	} else {
		webMI.gfx.setStroke("blinking_frame", e.value);
		webMI.gfx.setVisible("blinking_frame",{0:true,2:false,4:true,6:false,8:true,10:false});
	}
});

webMI.trigger.connect("com.atvise.setBackground", function(e){
	backgroundColor = (e.value == "") ? webMI.query["fill"] : e.value;
	setColorization();
});
},{},{"activeNode":"","activeValue":"off","allowDirectInput":"Yes","base":"","consistencyGroup":"","decimalFraction":"","editable":"Yes","enumList":"","fill":"#ffffff","fillColorInactive":"#ffffff","fillNotEditable":"#ffffff","focusStrokeColor":"#ffffff","fontColor":"#647A8F","fontFamily":"Open Sans","fontSize":"12","leadingZeros":"0","limitHigh":"off","limitHighFill":"#ffffff","limitHighHigh":"off","limitHighHighFill":"#ffffff","limitLow":"off","limitLowFill":"#ffffff","limitLowLow":"off","limitLowLowFill":"#ffffff","max":"off","min":"off","nodeHigh":"","nodeHighHigh":"","nodeLow":"","nodeLowLow":"","nodeMax":"","nodeMin":"","outputNode":"","password":"No","postDecimal":"0","right":"","selectTextOnFocus":"false","sign":"false","tabIndex":"","validation":"Number"}],"4":[function(webMI,window,document,self){},{},{}],"3":[function(webMI,window,document,self){},{},{"symbolColor":"#000000"}]},window);
//]]></script>
 </body>
</html>
