<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg width="964" version="1.2" xmlns="http://www.w3.org/2000/svg" height="600" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:atv="http://webmi.atvise.com/2007/svgext">
 <defs/>
 <metadata>
  <atv:gridconfig width="10" enabled="true" height="10" gridstyle="lines"/>
  <atv:snapconfig width="10" enabled="true" height="10"/>
 </metadata>
 <svg width="800" x="0" y="461.947" height="600" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Chrome.hmi.iframe" id="id_subview" atv:refpx="0" atv:refpy="546.188" transform="matrix(1.205,0,0,0.565,0,0)">
  <atv:argument value="subframe" name="frameName"/>
  <atv:argument value="false" name="isDefault"/>
  <atv:argument value="SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS.QINOUS.Components.Sub.Slider" name="display"/>
 </svg>
 <svg width="472" x="490" y="20" height="222" xlink:href="SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS.QINOUS.Components.Chart.StandardChart" id="container" atv:refpx="731.09" atv:refpy="132.191"/>
 <svg width="345" x="74" y="0" visibility="hidden" height="285" xlink:href="SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS.QINOUS.Components.Focus.FocusComponent" id="id_focuscomponent" atv:refpx="219" atv:refpy="77"/>
 <script type="text/ecmascript" xlink:href="/js/jquery.min.js"/>
 <script type="text/ecmascript" xlink:href="/js/slick/slick.min.js"/>
 <script type="text/ecmascript" xlink:href="/q/StdConstantsFunctions.js"/>
 <script type="text/ecmascript" xlink:href="/q/ComponentTree.js"/>
 <script type="text/ecmascript" xlink:href="/q/MonitoringFunctions.js"/>
 <script type="text/ecmascript"><![CDATA[webMI.addOnload(function() {

	console.log("- Loading monitoring view -");
	webMI.trigger.fire("MonitoringNodeRequest");

});

var subcomps = [];
var currentNode;
var focuscomp;
var focus_data;

webMI.trigger.connect("SetMonitoringNode", function(e){
//	console.log("SetMonitoringBasicData received", e);
	if (typeof e.value == 'undefined'){
		return;
	}
//	console.log("Received monitoring bd. Will display ",e.value);

	currentNode = e.value;

	if (currentNode.Type == TYPE_SYSTEM) {
		// system overview is special
		focus_data = getBasicData(currentNode.subComponentList[0], false);
		for (var i=1; i<currentNode.subComponentList.length; i++){
			subcomps.push(currentNode.subComponentList[i]);
		}

	} else {

		focus_data = getBasicData(currentNode);
		subcomps = currentNode.subComponentList;

	}

	webMI.gfx.setVisible("id_focuscomponent", true);
	
	setupBasicData("id_focuscomponent", focus_data, true);

	if ((focus_data.type == TYPE_SAMSUNG_RACK) || (focus_data.type == TYPE_BATTERY_STRING)) {

		webMI.display.openDisplay("GUI.DISPLAYS.RackView", webMI.query, "subframe");
		webMI.trigger.fire("showdropdown", true);
	} else{

	}

});

webMI.trigger.connect("RequestSubcomponents", function(e){

	webMI.trigger.fire("AppendSubcomponents", subcomps);
//	console.log("list of sub components to append: ", subcomps);

});

webMI.trigger.connect("RequestRackNode", function(e){

//	console.log("Sending node", currentNode);
	webMI.trigger.fire("SendRackNode", currentNode);

});


]]></script>
</svg>
